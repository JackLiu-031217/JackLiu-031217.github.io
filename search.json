[{"title":"洛谷笔记 - B2135 单词替换","url":"/posts/B2135-regexp_replace/","content":"复健用题（？）\n\n// Problem: B2135 单词替换\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/B2135\n// Memory Limit: 128 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    string a[200],j,k;\n    short b=0;\n    do{\n        cin&gt;&gt;a[b];\n        b++;\n    }while(getchar()==' ');\n    cin&gt;&gt;j&gt;&gt;k;\n    for(short c=0;c&lt;b;c++){\n        if(a[c]==j){\n            a[c]=k;\n        }\n        cout&lt;&lt;a[c];\n        if(c!=b-1) cout&lt;&lt;\" \";\n    }\n    return 0;\n}\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1003 [NOIP2011 提高组] 铺地毯","url":"/posts/P1003-Lay-Carpets-NOIP2011-DAY1/","content":"咕咕咕\n2021 新春快乐\n\n /*------------------------------------\n    P1003 [NOIP2011 提高组] 铺地毯\n    noip2011 提高组 day1 第 11 题\n------------------------------------*/\n\n//为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。\n//一共有 n 张地毯，编号从 1 到 n 。\n//现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。\n//地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。\n//https://www.luogu.com.cn/problem/P1003\n//部分代码借鉴了https://clear-skies.blog.luogu.org/solution-p1003\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n; //地毯数，1&lt;=n&lt;=10000\n    cin&gt;&gt;n;\n    int a[10001],b[10001],g[10001],k[10001];\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;g[i]&gt;&gt;k[i]; //注意:(a,b)是地毯左下角的坐标.g,k是该块地毯x,y轴上的长度\n    }\n    int x,y; //判断用的点\n    bool l=0;\n    cin&gt;&gt;x&gt;&gt;y;\n    for(int d=n;d&gt;=1;d--){ //逆序倒推\n        if(x&gt;=a[d]&amp;&amp;x&lt;=a[d]+g[d]&amp;&amp;y&lt;=b[d]+k[d]&amp;&amp;y&gt;=b[d]){\n            cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;y&lt;&lt;endl;\n            return 0;\n        }\n    }\n    cout&lt;&lt;\"-1\"&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷训练场","url":"/posts/Luogu-Training/","content":"\nR.I.P. 洛谷试炼场\n\n云剪贴板，作者听取 MLE 声一片\n新手村\n任何一个伟大的目标，都有一个微不足道的开始。\n洛谷的第一个任务\n勇敢的迈出第一步，了解下语言和洛谷。跟着书本和老师走，不会难的。\n\nP1000\nP1001\nP1421\nP1425\n\n顺序与分支\n计算机的智能性开始得以体现，因为计算机能够根据不同的条件选择了。\n\nP1422\nP1085\nP1089\nP1909\n\n循环！循环！循环！\n计算机最不怕的就是重复。你让它做 10000 次同样的事它也不怕啦，但是让他做 1 亿亿次的话……\n\nP1008\nP1035\nP1423\nP1424\nP1980\n\n数组\n跟数组有关的题目基本上都要用到循环，所以请先完成 1-3。\n\nP1046\nP1047\nP1427\nP1428\nP2141\nP1567\n\n简单字符串\n计算机不仅可以处理数字，还能处理文字！就是其实跟数字也没什么差。\n\nP1055\nP1200\nP1308\nP1553\nP1598\nP1914\n\n过程函数与递归\n将代码串进行打包，就是过程与函数。过程与函数调用自己则为递归。有一点小难但不要怕哦。\n\nP1028\nP1036\nP1149\nP1217\n\nBOSS 战 - 入门综合练习 1\n这里将前面的内容综合起来了，会有点难，不过你可以问老师同学，也能上网查资料。\n\nP1478\nP1618\nP1579\nP2089\n\nBOSS 战 - 入门综合练习 2\n勇士，竟然来到了 BOSS 的老巢！来一场恶斗，证明自己的实力，解锁下一个级别！\n\nP1426\nP1464\nP1014\nP1022\nP1307\n\n普及练习场\n普及组选手可冲刺训练，提高组选手亦可在此巩固基础。\n简单的模拟\n开始普及组的训练！所谓模拟，就是直接根据题意编写，思维难度简单。\n\nP1003\nP1067\nP1540\nP1056\nP1328\nP1563\n\n交叉模拟\n这里也是模拟，但是会混有些别的部分。思维难度不大，但是编写起来会有些难度。\n\nP1023\nP1031\nP1042\nP1086\nP1098\nP3952\n\n排序\n将杂乱无章的数据变得有规律。有各种各样的排序算法，看情况使用。\n\nP1177\nP1059\nP1068\nP1781\n\n排序 Ex\n这里的排序就更上一层了。不仅融合了别的算法与技巧，排序本身也有各种花招。\n\nP1583\nP1051\nP1093\nP1309\n\n字符串处理\n这里的字符串处理还会变得更加的有意思，难度也更大。需要好好地思考一下。\n\nP1603\nP1071\nP1012\nP1538\n\n贪心\n贪心就是只考虑眼前的利益。对于我们人生来说太贪是不好的，不过 oi 中，有时是对的。\n\nP1090\nP1181\nP1208\nP1223\nP1094\nP1803\nP1031\nP1080\n\n深度优先搜索\n搜索可以穷举各种情况。很多题目都可以用搜索完成。就算不能，搜索也是骗分神器。\n\nP1219\nP1019\nP1101\nP1605\nP1040\nP1092\n\n广度优先搜索\n广度优先搜索可以用来找有关 “最短步数” 的问题。恩，也可以用来 “地毯式搜索”。\n\nP1162\nP1032\nP1141\nP1126\nP1443\n\n带有技巧的搜索\n这里的搜索不仅包含了 dfs 和 bfs，还包括剪枝、记录等技巧以加快速度。\n\nP1118\nP1434\nP1433\nP1074\n\n分治算法\n将大问题拆分为小问题，分而治之，各个击破，然后在合并回来。\n\nP1226\nP1010\nP1908\nP1498\n\n简单数学问题\n用计算机解决某些麻烦数学问题，再合适不过了。这真是绝妙的搭配啊！\n\nP1088\nP1045\nP1403\nP1017\nP1147\nP1029\n\n递推与递归二分\n递推，层层递进，由基础推向顶层。二分不仅可以用来查找数据，还可以确定最合适的值。\n\nP1192\nP1025\nP1057\nP1135\nP1216\nP1182\nP1316\n\n线性数据结构\n数组，链表，队列，栈，都是线性结构。巧用这些结构可以做出不少方便的事情。\n\nP1996\nP1115\nP1739\nP1160\nP1449\n\n树形数据结构\n由一个根节点分叉，越分越多，就成了树。树可以表示数据之间的从属关系\n\nP1087\nP1030\nP1305\nP5018\n\n动态规划的背包问题\n这是最基础的动态规划。不过如果是第一次接触会有些难以理解。加油闯过这个坎。\n\nP1060\nP1164\nP1064\nP1048\nP1049\nP1616\n\n线性动态规划\n这也是基础的动态规划。是在线性结构上面的动态规划，一定要掌握。\n\nP1020\nP1091\nP1280\nP1880\nP1140\nP1282\n\n多维动态规划\n这里的动态规划就不止一维了。不仅要小心时间复杂度，也要注意空间复杂度。\n\nP1508\nP1006\nP1387\nP1417\nP1855\nP1736\n\n更要技巧的动规与记忆化\n这边的题目有各种搞法。当然有的题目也可以使用记忆化搜索来降低思维难度。\n\nP1064\nP1541\nP1026\nP1063\nP1156\nP1052\n\n高精度算法\n就算是 long long（或 int64）还不够怎么办？用高精度算法。自己动手丰衣足食。\n\nP1601\nP2142\nP1303\nP1255\nP1604\n\n贪心 EX\n虽然是贪心题，可能不是你当时你虐着玩的贪心惹 qwq\n\nP1080\nP1031\nP1233\nP2123\n\n简单数学\n数学和 oi 是密切相关的，数学不仅是 oi 的基础，而且是算法的核心。\n\nP1865\nP1372\nP1338\nP2158\nP1582\n\nBOSS 战 - 普及综合练习 1\n好不容易闯到这一关，你那还等什么呢？抄起家伙赶快上啊！\n\nP1478\nP1203\nP1363\nP1736\n\nBOSS 战 - 普及综合练习 2\n来搞定第二个 BOSS。虽然战斗艰难，但你一定没有问题。\n\nP1201\nP1095\nP1058\nP2258\nP1108\n\nBOSS 战 - 普及综合练习 3\n普及练习场的大 BOSS：“一定让你有去无回”。怎么办呢？只能打倒他开启下一个级别！\n\nP1328\nP1062\nP1969\nP1037\n\n普及常见模板\n这里集中了比较基础的算法的模板。提高和省选也有模板题哦！\n\nP1177\nP3366\nP3367\nP3371\nP3383\n\n提高历练地\n已经去除了普及组难度的，请组织放心。成长大牛之必写题！！！\n搜索 Ex\n开始提高组的试炼。这里已经去除了所有普及组难度的题目。哼哼，怕了吧。。\n\nP1120\nP1378\nP1514\nP1312\nP1441\nP1242\n\n动态规划 TG.lv(1)\n这是提高组难度中比较基础的动态规划，也许一两个转移方程就可以写出。\n\nP1005\nP1373\nP2279\nP1220\nP1156\n\n动态规划 TG.lv(2)\n这里的动态规划稍稍有所加大难度，思考转移方程的时间可能会与编写程序的时间持平。\n\nP1273\nP1169\nP2577\nP1070\nP2051\n\n动态规划 TG.lv(3)\n比较需要技巧的动态规划。有的不仅仅需要状态转移方程，可能还会与别的算法综合。\n\nP1415\nP2157\nP2216\nP2331\nP2467\nP3084\n\n数论\n数论就是研究整数的理论。包括公约公倍数、质数、欧拉定理和同余方程等。\n\nP2152\nP1414\nP1134\nP1313\nP1306\n\n博弈论\n博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。\n\nP1199\nP1288\nP1290\nP2148\nP1247\nP2575\n\n其他数学问题\n听说学 oi 的同志们数学都挺好。那么。就请完成下面的题目证明这一点吧！\n\nP1357\nP1641\nP2059\nP2154\nP2261\nP2327\nP1066\n\n图的遍历\n图是一种非常重要的数据结构，描述对象复杂的练习。这里开始接触图的基本概念。\n\nP2661\nP1330\nP1341\nP2921\n\n最短路问题\n最短路是图论中最重要的部分，多种算法可以应用。很多题目都可以抽象成这种模型。\n\nP1339\nP1462\nP1346\nP1119\nP1144\nP1522\n\n最小生成树\n最小生成树可以用 kruskal（克鲁斯卡尔）算法或 prim（普里姆）算法求出。\n\nP1546\nP2330\nP1991\nP1265\n\n较复杂图论 I\n别的些图论问题，包括树、拓扑排序等。要过这一关，需要学习不少新的算法。\n\nP1113\nP1268\nP1525\nP1983\n\n较复杂图论 II\n更高级的图论算法。包括差分约束、强连通、二分图等。会更难一些。\n\nP1993\nP1726\nP2055\nP2149\nP1345\n\n并查集\n用于处理一些不相交集合的合并及查询问题。常常在使用中以森林来表示。\n\nP1111\nP2024\nP1197\nP1196\n\n堆\n堆总是一棵完全树；堆中某个节点的值总是不大于或不小于其父节点的值。\n\nP1801\nP2278\nP1631\nP2085\nP1484\n\n线段树树状数组基础\n这都是比较高级的线性数据结构。在处理一些询问与修改线性问题时，是很好用的。\n\nP1972\nP1198\nP2023\nP2161\n\n神奇的解法\n有些问题刚开始觉得无从下手。好好想一想，尽量别看题解，否则你会大呼 “简单”。\n\nP1007\nP1984\nP2022\nP2320\n\n倍增\n一种特殊的枚举算法，但可大大加快效率。近年 noip 有考到。难度较大。\n\nP1967\nP1081\nP1613\n\n强连通分量\n强连通分量\n\nP2341\nP3469\nP2746\nP3119\nP3225\n\nBOSS 战 - 提高综合练习 1\n年轻人，又是个送上门的，让我来看看你真实的本领。啊哈哈哈哈哈！\n\nP2264\nP1772\nP1083\nP1979\nP2939\n\nBOSS 战 - 提高综合练习 2\n再来！这里有的题目并非单纯的考察某个算法，而是考察一种综合性的思维。\n\nP1901\nP1314\nP2144\nP1073\nP2324\n\nBOSS 战 - 提高综合练习 3\n既然已经打倒了前面 2 个 boss，那么第 3 个也是没有问题的。少年，来吧！\n\nP1965\nP1311\nP2296\nP1084\n\n提高模板 - nlogn 数据结构\n虽然这些算法不是 noip 必须的，但是不算困难，很多题目可以使用这些方法。\n\nP3374\nP3368\nP3372\nP3373\nP1439\nP3378\n\n省选斗兽场 / NOI 神殿\n为省选及以上选手制作的训练场。其实，省选水平的 oier 不需要一些外加的刷题列表，本栏仅供参考，也欢迎各位指出不足。\n省选基础 - 读入 / 输出优化\n读入 / 输出优化是省选刷题时必要的一个东西，这里给出了几题，需要自己手写相应的读入输出处理。作为第一关，这一关相对简单。\n\nP1580\nP2393\nP2394\n\n省选基础 - 位运算\n位运算往往在必要的时候，能带你优化一下常数，也许是空间；也许是时间；有的时候这样可以多过很多分\n\nP2114\nP2396\nP2397\n\n省选基础 - 打表\n打表虽然很赖皮，而且基本都是非正解，但是这种办法能让我们在省选中拿到一些会超时或者会超空间的一些数据点\n\nP1149\nP1463\nP1896\n\n动态规划 1\n动态规划\n\nP2051\nP1879\nP1850\nP2831\nP1131\nP1169\n\n动态规划 2\n动态规划\n\nP1273\nP3648\nP2519\nP2515\nP3233\nP2501\n\n网络流 —— 最大流\n最大流\n\nP2765\nP2764\nP2763\nP2766\nP2774\nP2805\n\n网络流 —— 费用流\n费用流\n\nP2153\nP2053\nP3159\nP2604\nP2050\nP3980\n\n单调队列\n单调队列\n\nP2698\nP2216\nP2219\nP2564\nP2569\n\n概率期望\n概率期望\n\nP2473\nP2221\nP3317\nP3343\nP3600\nP3830\n\n二分图\n二分图\n\nP3386\nP1640\nP1129\nP1963\nP3231\nP2526\n\n点分治\n点分治\n\nP2634\nP2664\nP3806\nP3676\n\n后缀数组\n后缀数组\n\nP3809\nP1117\nP2178\nP2463\nP2336\n\n主席树\n主席树\n\nP2468\nP3157\nP3302\nP3168\nP3313\n\n数位 DP\n数位 DP\n\nP2602\nP3281\nP2518\nP2606\n\nAC 自动机\nAC 自动机\n\nP3808\nP3796\nP2444\nP2414\n\n平衡树\n平衡树\n\nP2042\nP2596\nP1110\nP3285\nP3644\nP3765\nP3369\n\n树链剖分\n树链剖分\n\nP2590\nP2486\nP2146\nP3258\nP3178\n\n动态树\n动态树\n\nP3690\nP2387\nP3203\nP3348\n\n树套树\n树套树\n\nP1903\nP3157\nP3332\nP2166\nP3380\nP2137\nP3759\n\n可持久化 Trie 树\n可持久化 Trie 树\n\nP2048\nP3527\nP3302\nP3168\nP3242\nP3241\nP3293\n\n莫队算法\n莫队算法\n\nP1972\nP2336\nP3709\nP2709\nP3674\n\n分块\n分块\n\nP1972\nP3396\nP1822\nP2801\nP3203\n\n莫比乌斯反演\n莫比乌斯反演\n\nP3768\nP3172\nP3455\nP2522\nP3327\n\n其他\n其他\n\nP3377\nP3261\nP3382\nP2571\nP3222\nP3187\nP3199\nP3292\nP2824\nP3285\nP1552\n\nUSACO\n美国经典的算法练习题库，值得一刷\nUSACO Section 1.1\n\nP1200\nP1201\nP1202\nP1203\n\nUSACO Section 1.2\n完全枚举\n\nP3864\nP1204\nP1205\nP1206\nP1207\n\nUSACO Section 1.3\n贪心\n\nP1208\nP1209\nP1211\nP1444\nP3650\nP2693\n\nUSACO Section 1.4\n有技巧的枚举\n\nP1214\nP1215\n\nUSACO Section 1.5\n二进制数\n\nP1216\nP1217\nP1218\n\nUSACO Section 2.1\n图论和洪水填充\n\nP1457\nP1458\nP1459\nP1460\nP1461\n\nUSACO Section 2.2\n数据结构与动态规划\n\nP1465\nP1466\nP1467\nP1468\n\nUSACO Section 2.3\n\nP1470\nP1472\nP1473\nP1474\nP1475\n\nUSACO Section 2.4\n最短路径\n\nP1518\nP1519\nP1522\nP1529\nP1530\n\nUSACO Section 3.1\n最小生成树\n\nP1546\nP2722\nP2723\nP2724\nP2725\n\nUSACO Section 3.2\n背包问题\n\nP1134\nP2727\nP2728\nP2729\nP2730\nP1828\n\nUSACO Section 3.3\n欧拉回路\n\nP2731\nP2732\nP1930\nP2733\nP2734\n\nUSACO Section 3.4\n计算几何\n\nP1827\nP2735\nP2736\n\nUSACO Section 4.1\n最优化\n\nP2737\nP2738\n\nUSACO Section 4.2\n网络流\n\nP2740\nP1894\nP2751\n\nUSACO Section 4.3\n高精度\n\nP2687\nP2752\nP2753\n\nUSACO Section 4.4\n\nP1344\nP2739\nP2741\n\nUSACO Section 5.1\n二维凸包\n\nP2742\nP2743\nP2749\n\nUSACO Section 5.2\n\nP1560\n\nUSACO Section 5.3\n启发式搜索\n\nP2701\nP2744\nP2745\nP2746\n\nUSACO Section 5.4\n\nP1345\nP2747\nP2748\n\nUSACO Section 5.5\n\nP1709\nP1856\nP2750\n\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1028 数的计算","url":"/posts/P1028-Calculate-Number/","content":"\n/*\n  P1028 数的计算\n  我们要求找出具有下列性质数的个数(包含输入的正整数 n )。\n  先输入一个正整数n(n&lt;=1000),然后对此正整数按照如下方法进行处理：\n  不作任何处理；\n  在它的左边加上一个正整数,但该正整数不能超过原数的一半；\n  加上数后,继续按此规则进行处理,直到不能再加正整数为止。\n*/\n//重点：递推\n//https://www.luogu.com.cn/problem/P1028\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int num[10001],i;\n    cin&gt;&gt;i;\n    num[1]=1;\n    for(int m=2;m&lt;=i;m++){\n        num[m]=num[m-1];\n        if(m%2==0){\n            num[m]+=num[m/2];\n        }\n    }\n    cout&lt;&lt;num[i]&lt;&lt;endl;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1008 三连击","url":"/posts/P1008-Triple-Kill/","content":"\n//洛谷网校练习 P1008三连击 NOIP1998（？）普及组\n//解答来自https://www.luogu.com.cn/user/76149\n//我太弱了（\n#include &lt;stdio.h&gt;\n#include &lt;cstdlib&gt;\nint main()\n{\n    int i[9];\n    for (i[0] = 1; i[0] &lt;= 9; i[0]++)\n    {\n        for (i[1] = 1; i[1] &lt;= 9; i[1]++)\n        {\n            int p1=0;\n            if (i[1] == i[0]) p1 = 1;\n            if (p1 != 1) {\n                for (i[2] = 1; i[2] &lt;= 9; i[2]++)\n                {\n                    int p2=0;\n                    for (int j2 = 0; j2 &lt; 2; j2++) if (i[2] == i[j2]) p2 = 2;\n                    if (p2 != 2) {\n                        for (i[3] = 1; i[3] &lt;= 9; i[3]++)\n                        {\n                            int p3=0;\n                            for (int j3 = 0; j3 &lt; 3; j3++) if (i[3] == i[j3]) p3 = 3;\n                            if (p3 != 3) {\n                                for (i[4] = 1; i[4] &lt;= 9; i[4]++)\n                                {\n                                    int p4=0;\n                                    for (int j4 = 0; j4 &lt; 4; j4++) if (i[4] == i[j4]) p4 = 4;\n                                    if (p4 != 4) {\n                                        for (i[5] = 1; i[5] &lt;= 9; i[5]++)\n                                        {\n                                            int p5=0;\n                                            for (int j5 = 0; j5 &lt; 5; j5++) if (i[5] == i[j5]) p5 = 5;\n                                            if (p5 != 5) {\n                                                for (i[6] = 1; i[6] &lt;= 9; i[6]++)\n                                                {\n                                                    int p6=0;\n                                                    for (int j6 = 0; j6 &lt; 6; j6++) if (i[6] == i[j6]) p6 = 6;\n                                                    if (p6 != 6) {\n                                                        for (i[7] = 1; i[7] &lt;= 9; i[7]++)\n                                                        {\n                                                            int p7=0;\n                                                            for (int j7 = 0; j7 &lt; 7; j7++) if (i[7] == i[j7]) p7 = 7;\n                                                            if (p7 != 7) {\n                                                                for (i[8] = 1; i[8] &lt;= 9; i[8]++)\n                                                                {\n                                                                    int p8=0;\n                                                                    for (int j8 = 0; j8 &lt; 8; j8++) if (i[8] == i[j8]) p8 = 8;\n                                                                    if (p8 != 8) {\n                                                                        //printf(\"%d %d %d %d %d %d %d %d %d\\n\", i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]);\n                                                                        int a = 100 * i[0] + 10 * i[1] + i[2];\n                                                                        int b = 100 * i[3] + 10 * i[4] + i[5];\n                                                                        int c = 100 * i[6] + 10 * i[7] + i[8];\n                                                                        double d1 = double(a) / b;\n                                                                        double d2 = double(c) / b;\n                                                                        if (d1 == 0.5 &amp;&amp; d2 == 1.5)\n                                                                        {\n                                                                            printf(\"%d %d %d\\n\", a, b, c);\n                                                                            //system(\"pause\");\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    system(\"pause\");\n    return 0;\n}\n本文首发洛谷博客\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1031 [NOIP2002 提高组] 均分纸牌","url":"/posts/P1031-Evenly-Distribute-Cards-NOIP2002/","content":"很惭愧啊，只做了一点微小的工作（指后半段逻辑混乱抄借鉴题解）\n\n丢人\n/*-------------------------------------\n    P1031 [NOIP2002 提高组] 均分纸牌\n        NOIP 2002 提高组第一题\n--------------------------------------*/\n//https://www.luogu.com.cn/problem/P1031\n//https://www.luogu.com.cn/record/47010311\n//https://www.luogu.com.cn/record/47010349\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n; //纸牌堆数\n    cin&gt;&gt;n;\n    int p[n]; //每一堆纸牌包含的纸牌数目\n    int z=0; //纸牌总数\n    int ans=0; //移动次数\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;p[i];\n        z+=p[i];\n    }\n    z/=n;\n\n    //以下部分主要架构来自于 https://www.luogu.com.cn/blog/user262/solution-p1031\n    //感谢前辈 谁懂谁伤心 于 2013-11-22 发布的题解\n    //前辈的智慧不可小视\n    //本人的程序性思维还有待提升\n    \n    for(int i=1;i&lt;=n;i++){\n        p[i]-=z;\n    }\n\n    for(int i=1;i&lt;=n;i++){\n        if(p[i]==0){\n            continue;\n        }\n        p[i+1]+=p[i];\n        ans++;\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1035 级数求和","url":"/posts/P1035-Series-Equal/","content":"int,double,float 傻傻分不清（\n\n//洛谷网校 P1035 级数求和 NOIP2002普及组\n//题目链接https://www.luogu.com.cn/problem/P1035\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n\tdouble n,k,num; \n\t//n,k均是题目中提及变量，num说白了就是每一步中的Sn（不知道Markdown的代码块里能不能打LaTeX）(很显然不行\n\t//这道题需要保证精度足够，double型变量比float精度高点，但是float我没试过\n\tnum=0; //先要给num变量归零\n\tcin&gt;&gt;k; //输入整数k\n\tfor(n=1;n&lt;=2147483647;++n) //循环计算Sn\n\t{\n\t\tnum=num+1/n; //重复复现1+1/2+1/3+..+1/n的操作，要保证n的最大值足够大\n\t\tif(num&gt;=k) //判断Sn是否大于输入的整数k\n\t\t{\n\t\t\tcout&lt;&lt;n; //如果成立，输出当前的n值\n\t\t\treturn 0; //同时结束程序运行\n\t\t}\n\t}\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1067 [NOIP2009 普及组] 多项式输出","url":"/posts/P1067-Polynomial-Output-NOIP2009/","content":"懵\n\n//P1067 [NOIP2009 普及组] 多项式输出\n//https://www.luogu.com.cn/problem/P1067\n\n/*一元$n$次多项式可用如下的表达式表示：\n  ![](https://cdn.luogu.com.cn/upload/pic/26.png)\n  $$f(x)=a_nx^n+a_{n-1}x^{n-1}+\\cdots +a_1x+a_0,a_n\\ne 0$$\n  其中，$a_ix^i$称为$i$次项，$a_i$ 称为$i$次项的系数。给出一个一元多项式各项的次数和系数，请按照如下规定的格式要求输出该多项式：\n  1. 多项式中自变量为$ x$，从左到右按照次数递减顺序给出多项式。\n  2. 多项式中只包含系数不为$0$的项。\n  3. 如果多项式$n$次项系数为正，则多项式开头不出现“+”号，如果多项式$n$次项系数为负，则多项式以“-”号开头。\n  4.对于不是最高次的项，以“+”号或者“-”号连接此项与前一项，分别表示此项系数为正或者系数为负。\n  紧跟一个正整数，表示此项系数的绝对值（如果一个高于$0$次的项，其系数的绝对值为$1$，则无需输出 $1$）。\n  如果$x$的指数大于$1$，则接下来紧跟的指数部分的形式为“$x^b$”，其中 $b $为 $x $的指数；\n  如果 $x$的指数为$ 1$，则接下来紧跟的指数部分形式为“$x$”；\n  如果 $x$ 的指数为$ 0$，则仅需输出系数即可。\n  5.多项式中，多项式的开头、结尾不含多余的空格。\n*/\n\n//https://www.luogu.com.cn/record/49472475\n//https://www.luogu.com.cn/record/49472703\n//https://www.luogu.com.cn/record/49478920\n//https://www.luogu.com.cn/record/49479138\n//https://www.luogu.com.cn/record/49523093\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n\tint n;\n\tcin&gt;&gt;n;\n\tfor(int i=n;i&gt;=0;i--){\n\t\tstring num;\n\t\tbool jian=0;\n\t\tbool o=0;\n\t\tcin&gt;&gt;num;\n\t\tif(num==\"0\"){\n\t\t\tcontinue;\n\t\t}\n\t\tif(num==\"1\"){\n\t\t\to=1;\n\t\t\tnum=\"x\";\n\t\t}\n\t\tif(num[0]=='-'){\n\t\t\tjian=1;\n\t\t\tif(num==\"-1\"){\n\t\t\t\to=1;\n\t\t\t\tnum=\"-x\";\n\t\t\t}\n\t\t}\n\t\tif(i==n){\n\t\t\tif(o){\n\t\t\t\tcout&lt;&lt;num&lt;&lt;\"^\"&lt;&lt;i;\n\t\t\t}else cout&lt;&lt;num&lt;&lt;\"x^\"&lt;&lt;i;\n\t\t}else if(i==1){\n\t\t\tif(jian==0){\n\t\t\t\tcout&lt;&lt;\"+\";\n\t\t\t}\n\t\t\tif(o){\n\t\t\t\tcout&lt;&lt;\"x\";\n\t\t\t}else cout&lt;&lt;num&lt;&lt;\"x\";\n\t\t}else if(i==0){\n\t\t\tif(jian==0&amp;&amp;o){\n\t\t\t\tcout&lt;&lt;\"+1\";\n\t\t\t}else if(jian&amp;&amp;o){\n\t\t\t\tcout&lt;&lt;\"-1\";\n\t\t\t}else if(jian==0){\n\t\t\t\tcout&lt;&lt;\"+\"&lt;&lt;num;\n\t\t\t}else cout&lt;&lt;num;\n\t\t}else{\n\t\t\tif(jian==0){\n\t\t\t\tcout&lt;&lt;\"+\";\n\t\t\t}\n\t\t\tif(o){\n\t\t\t\tcout&lt;&lt;num&lt;&lt;\"^\"&lt;&lt;i;\n\t\t\t}else cout&lt;&lt;num&lt;&lt;\"x^\"&lt;&lt;i;\n\t\t}\n\t}\n\tcout&lt;&lt;endl;\n\treturn 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1047 校门外的树","url":"/posts/P1047-Tree-Out-Of-The-Door/","content":"\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#include&lt;iomanip&gt;\n#include&lt;cmath&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nint main(){\n    int l,subnum,subhead,subtail,treelocate,treeflag[10001],treenonflag=0;\n    /*\n    subnum:地铁站数量,subhead:占用区域头,subtail:占用区域尾,treelocate:树位置,treeflag[]:标记是否被占用,treenonflag:未被占用的树木的数目\n    */\n    cin&gt;&gt;l&gt;&gt;subnum;\n    for(treelocate=0;treelocate&lt;=l;treelocate++){\n        treeflag[treelocate]=0;//初始化\n        //cout&lt;&lt;\"Debuging:l=\"&lt;&lt;l&lt;&lt;\",locate=\"&lt;&lt;treelocate&lt;&lt;\",treeflag=\"&lt;&lt;treeflag[treelocate]&lt;&lt;endl;\n    }\n    for(int i=1;i&lt;=subnum;i++){//请注意，可以i=1,i&lt;subnum，也可以i=0,i&lt;subnum-1（一句废话）\n        cin&gt;&gt;subhead&gt;&gt;subtail;\n        //cout&lt;&lt;\"Debuging:head=\"&lt;&lt;subhead&lt;&lt;\",end=\"&lt;&lt;subtail&lt;&lt;endl;\n        for(treelocate=subhead;treelocate&lt;=subtail;treelocate++){\n            if(treeflag[treelocate]==0){\n                treeflag[treelocate]=1;//符合条件，进行标记\n            }\n            //cout&lt;&lt;\"locate=\"&lt;&lt;treelocate&lt;&lt;\",flag=\"&lt;&lt;treeflag[treelocate]&lt;&lt;endl;\n        }\n    }\n    for(treelocate=0;treelocate&lt;=l;treelocate++){\n        if(treeflag[treelocate]==0){\n            treenonflag+=1;//找到没被标记的个数\n            //cout&lt;&lt;\"Debuging:treenonflag=\"&lt;&lt;treenonflag&lt;&lt;endl;\n        }\n    }\n    cout&lt;&lt;treenonflag&lt;&lt;endl;//输出\n    //如果不会用gdb,cout式debug是你不二的选择（\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1042 乒乓球","url":"/posts/P1042-Ping-Pong-Ball/","content":"AC 题目，思路为先\n思路不行，一切白搭\n\n//P1042 乒乓球\n//华华通过以下方式进行分析，首先将比赛每个球的胜负列成一张表，然后分别计算在1111分制和2121分制下，双方的比赛结果（截至记录末尾）。\n//比如现在有这么一份记录，（其中W表示华华获得一分，L表示华华对手获得一分）：\n//WWWWWWWWWWWWWWWWWWWWWWLW\n//在1111分制下，此时比赛的结果是华华第一局1111比00获胜，第二局1111比00获胜，正在进行第三局，当前比分11比11。而在2121分制下，此时比赛结果是华华第一局2121比00获胜，正在进行第二局，比分22比11。\n//如果一局比赛刚开始，则此时比分为00比00。直到分差大于或者等于22，才一局结束。\n//你的程序就是要对于一系列比赛信息的输入（WLWL形式），输出正确的结果。\n//https://www.luogu.com.cn/record/36502585\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    char word[62500];     //开个够大的数组(25*2500=62500)\n    int awin=0,bwin=0,i;\n    for(i=1;;i++){\n        cin&gt;&gt;word[i];\n        if(word[i]=='W'){ //标记\n            word[i]=1;\n        }else if(word[i]=='L'){\n            word[i]=2;\n        }else if(word[i]=='E'){\n            word[i]=0;\n            break;\n        }\n    }\n    //11分\n    for(int o=1;o&lt;=i;o++){\n        if(word[o]==1){\n            awin++;\n        }else if(word[o]==2){\n            bwin++;\n        }if(word[o]==0){\n            cout&lt;&lt;awin&lt;&lt;\":\"&lt;&lt;bwin&lt;&lt;endl&lt;&lt;endl; //EOF\n        }\n        if(awin-bwin&gt;=2||bwin-awin&gt;=2){\n            if(awin&gt;=11||bwin&gt;=11){           //到达11分和分差为2时自动输出+清除\n                cout&lt;&lt;awin&lt;&lt;\":\"&lt;&lt;bwin&lt;&lt;endl;\n                awin=0;\n                bwin=0;\n            }\n        }\n    }\n    awin=0;                                   //为下文归零\n    bwin=0;\n    //21分\n    for(int o=1;o&lt;=i;o++){\n        if(word[o]==1){\n            awin++;\n        }else if(word[o]==2){\n            bwin++;\n        }if(word[o]==0){\n            cout&lt;&lt;awin&lt;&lt;\":\"&lt;&lt;bwin&lt;&lt;endl&lt;&lt;endl;\n        }\n        if(awin-bwin&gt;=2||bwin-awin&gt;=2){\n            if(awin&gt;=21||bwin&gt;=21){\n                cout&lt;&lt;awin&lt;&lt;\":\"&lt;&lt;bwin&lt;&lt;endl;\n                awin=0;\n                bwin=0;\n            }\n        }\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1059 明明的随机数","url":"/posts/P1059-Ming-s-Random-Number/","content":"\n//洛谷OJ P1059 明明的随机数\n//明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数(N&lt;=100)，\n//对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。\n//然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。\n//https://www.luogu.com.cn/record/39385177\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nint main(){\n    int nc,n[101],c[101],cyn=0;\n    cin&gt;&gt;nc;\n    for(int i=0;i&lt;nc;i++){\n        int same=0;\n        cin&gt;&gt;n[i];\n        c[i]=n[i];\n        for(int o=0;o&lt;=i;o++){\n            if(n[i]==c[o]){\n                same++;\n            }\n        }\n        if(same==1){\n            cyn++;\n        }else if(same!=1){\n            c[i]=0;\n        }\n    }\n    sort(c,c+nc);\n    cout&lt;&lt;cyn&lt;&lt;endl;\n    for(int i=0;i&lt;nc;i++){\n        if(c[i]==0){\n            continue;\n        }else cout&lt;&lt;c[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1075 [NOIP2012 普及组] 质因数分解","url":"/posts/P1075-Decomposing-Prime-Factor-NOIP2012J/","content":"\n//P1075 [NOIP2012 普及组] 质因数分解\n//https://www.luogu.com.cn/problem/P1075\n\n//已知正整数 n 是两个不同的质数的乘积，试求出两者中较大的那个质数。\n\n//https://www.luogu.com.cn/record/57292493\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    unsigned long long n;\n    cin&gt;&gt;n;\n    for(unsigned long long i=2;i&lt;=n;i++){\n        if(n%i==0){\n            cout&lt;&lt;n/i&lt;&lt;endl;\n            return 0;\n        }\n    }\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1085 不高兴的津津","url":"/posts/P1085-Jinjin-is-unhappy-ME-TOO/","content":"赞美数组、逆推\n\n//洛谷 P1085 不高兴的津津(NOIP2004)\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n\tint day,night,zong[7],max,ans,d; //白天时长 晚间时长 一周7天时长的存储数组 最大时长 时间最久的那一天 \n\tmax=0; //归零\n\tans=0; //便于在没有该日期时输出0\n\tfor(d=1;d&lt;=7;d++) //正向数据录入\n\t{\n\t\tcin&gt;&gt;day&gt;&gt;night;\n\t\tzong[d]=day+night;\n\t}\n\tfor(d=7;d&gt;=1;d--)//逆向推算（偷懒妙招）\n\t{\n\t\tif(zong[d]&gt;max&amp;&amp;zong[d]&gt;8) //判断值是否最大/是否等于8\n\t\t{\n\t\t\tzong[d]=max; //总数最大者为max\n\t\t\tans=d; //同时max对应的天数为最大日\n\t\t}\n\t}\n\tcout&lt;&lt;ans&lt;&lt;endl; //结果输出\n\treturn 0;\n}\n本文首发洛谷博客 不高兴的津津\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1161 开灯","url":"/posts/P1161-Daisuke/","content":"啥也不会，啥也不是\n就现在这种练习强度，CSP2020 有点悬啊……\n好高骛远，小心闪着腰……\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    bool light[2000001]={0};\n    int t,n;\n    long long T; //一定要记得弄一个long long 数存相乘的结果，否则分分钟溢出\n    double a;\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a&gt;&gt;t;\n        for(int o=1;o&lt;=t;o++){\n            T=a*o;\n            if(light[T]==false){ //布尔变量标识\n                light[T]=true;\n            }else light[T]=false;\n        }\n    }\n    for(int i=1;;i++){\n        if(light[i]==true){\n            cout&lt;&lt;i&lt;&lt;endl;\n            break;\n        }\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1125 笨小猴","url":"/posts/P1125-Silly-Monkey/","content":"我胡汉三又回来了\nNOIP2020 钱都交完了才发现理论知识不过关而且准备时间不足一个月的我.jpg\n二叉树？链表？救命\n\n //洛谷OJ P1125 笨小猴\n//笨小猴的词汇量很小，所以每次做英语选择题的时候都很头疼。但是他找到了一种方法，经试验证明，用这种方法去选择选项的时候选对的几率非常大！\n//这种方法的具体描述如下：假设maxn是单词中出现次数最多的字母的出现次数，\n//minn是单词中出现次数最少的字母的出现次数，如果maxn-minn是一个质数，那么笨小猴就认为这是个Lucky Word，这样的单词很可能就是正确的答案。\n//https://www.luogu.com.cn/record/38660413\n//https://www.luogu.com.cn/record/38660707\n//https://www.luogu.com.cn/record/38660765\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    string word;\n    cin&gt;&gt;word;\n\n    int charnum[26]={0};\n    for(int i=0;i&lt;word.length();i++){\n        int charr=word[i]-'a'+1;\n        charnum[charr]++;\n    }\n\n    int maxx=0,minn=100;\n    for(int i=0;i&lt;26;i++){\n        if(charnum[i]&gt;maxx) maxx=charnum[i];\n        if(charnum[i]&gt;0&amp;&amp;charnum[i]&lt;minn) minn=charnum[i];\n    }\n\n    int monkey=maxx-minn,zhishu=0;\n    for(int i=2;i&lt;=monkey;i++){\n        if(monkey%i==0) zhishu++;\n    }\n    if(zhishu==1){\n        cout&lt;&lt;\"Lucky Word\"&lt;&lt;endl&lt;&lt;monkey&lt;&lt;endl;\n    }else cout&lt;&lt;\"No Answer\"&lt;&lt;endl&lt;&lt;\"0\"&lt;&lt;endl; //小 心 大 小 写\n    \n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1150 Peter 的烟","url":"/posts/P1150-Peter-s-cigarette/","content":"\n/*---------------------------------------\n            P1150 Peter的烟\n  https://www.luogu.com.cn/problem/P1150\n  ---------------------------------------\n  Peter 有 n 根烟，他每吸完一根烟就把烟蒂保存起来，\n  k(k&gt;1)个烟蒂可以换一个新的烟，\n  那么 Peter 最终能吸到多少根烟呢？\n  吸烟有害健康。\n*/\n\n//https://www.luogu.com.cn/record/56747627\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n,k;\n    cin&gt;&gt;n&gt;&gt;k;\n    //\"此解法为小学4~6年级水平\"\n    //Source: https://www.luogu.com.cn/blog/user37001/solution-p1150\n    cout&lt;&lt;n+(n-1)/(k-1);\n    //我上了个假小学（划掉\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1151 子数整数","url":"/posts/P1151-Numerator-Integer/","content":"\n/*-------------------------------------------/\n                P1151 子数整数       \n    https://www.luogu.com.cn/problem/P1151\n/-------------------------------------------*/\n\n/*\n  对于一个五位数a1a2a3a4a5，可将其拆分为三个子数：\n  sub1=a1a2a3\n  sub2=a2a3a4\n  sub3=a3a4a5\n  例如，五位数20207可以拆分成\n  sub1=202\n  sub2=020(=20)\n  sub3=207\n  现在给定一个正整数K，要求你编程求出10000到30000之间所有满足下述条件的五位数，\n  条件是这些五位数的三个子数sub1,sub2,sub3都可被K整除。\n*/\n\n//https://www.luogu.com.cn/record/55255820 (忽略了无解时的No输出)\n//https://www.luogu.com.cn/record/55255846\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int in;\n    cin&gt;&gt;in;\n    char num[5]={'1','0','0','0','0'};\n    int m=0;\n    for(int i=10000;i&lt;=30000;i++){\n        for(int o=4;o&gt;=0;o--){\n            if(num[o]&gt;'9'){\n                num[o-1]++;\n                num[o]='0';\n            }\n        }\n        int fd=0;\n        for(int o=0;o&lt;=2;o++){\n            int n=0;\n            n+=((num[o]-'0')*100)+((num[o+1]-'0')*10)+(num[o+2]-'0');\n            if(n%in==0){\n                fd++;\n            }\n        }\n        if(fd==3){\n            cout&lt;&lt;i&lt;&lt;endl;\n            m++;\n        }\n        num[4]++;\n    }\n    if(m==0){\n        cout&lt;&lt;\"No\"&lt;&lt;endl;\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1152 欢乐的跳","url":"/posts/P1152-I-Just-Wanna-Jump-Jump-Jump-Jump/","content":"\n/*--------------------------------------------/\n                P1152 欢乐的跳\n    https://www.luogu.com.cn/problem/P1152   \n/--------------------------------------------*/\n\n/*\n    一个nn个元素的整数数组，如果数组两个连续元素之间差的绝对值包括了[1,n−1]之间的所有整数，则称之符合“欢乐的跳”，\n    如数组1 4 2 31423符合“欢乐的跳”，因为差的绝对值分别为：3,2,1。\n    给定一个数组，你的任务是判断该数组是否符合“欢乐的跳”。\n*/\n\n//https://www.luogu.com.cn/record/56288145\n//https://www.luogu.com.cn/record/56342830\n\n#include&lt;iostream&gt;\n#include&lt;cmath&gt;\nusing namespace std;\nint main(){\n    int n;\n    long long int nn[1000];\n    cin&gt;&gt;n;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;nn[i];\n    }\n\n    bool nnn[1000]={0};\n    for(int i=0;i&lt;n-1;i++){\n        int h=abs(nn[i]-nn[i+1]);\n        if(h&gt;=1&amp;&amp;h&lt;n){ //越界判断\n            if(nnn[h-1]){ //重复判断\n                cout&lt;&lt;\"Not jolly\"&lt;&lt;endl;\n                return 0;\n            }else nnn[h-1]=1;\n        }else{\n            cout&lt;&lt;\"Not jolly\"&lt;&lt;endl;\n            return 0;\n        }\n    }\n    \n    int c=0;\n    for(int i=0;i&lt;n;i++){\n        if(nnn[i]) c++;\n    }\n    \n    if(c==n-1) cout&lt;&lt;\"Jolly\"&lt;&lt;endl;\n    \n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1200 [USACO1.1] 你的飞碟在这儿 Your Ride Is Here","url":"/posts/P1200-Your-Ride-Is-Here-USACO1-1/","content":"取值逼疯一片\n星咏者 [^1] 狂喜（并不\n\n\n /*P1200 [USACO1.1]你的飞碟在这儿Your Ride Is Here\n  众所周知，在每一个彗星后都有一只UFO。这些UFO时常来收集地球上的忠诚支持者。不幸的是，他们的飞碟每次出行都只能带上一组支持者。因此，他们要用一种聪明的方案让这些小组提前知道谁会被彗星带走。他们为每个彗星起了一个名字，通过这些名字来决定这个小组是不是被带走的那个特定的小组（你认为是谁给这些彗星取的名字呢？）。关于如何搭配的细节会在下面告诉你；\n  你的任务是写一个程序，通过小组名和彗星名来决定这个小组是否能被那颗彗星后面的UFO带走。\n  小组名和彗星名都以下列方式转换成一个数字：最终的数字就是名字中所有字母的积，其中A是1，Z是26。\n  例如，USACO小组就是 21*19*1*3*15=17955。如果小组的数字 mod 47等于彗星的数字 mod 47,你就得告诉这个小组需要准备好被带走！\n  （记住“a mod b”是a除以b的余数；34 mod 10等于44）\n  写出一个程序，读入彗星名和小组名并算出用上面的方案能否将两个名字搭配起来\n  如果能搭配，就输出“GO”，否则输出“STAY”。\n  小组名和彗星名均是没有空格或标点的一串大写字母（不超过66个字母）。\n*/\n//https://www.luogu.com.cn/problem/P1200\n//https://www.luogu.com.cn/record/37054987\n//https://www.luogu.com.cn/record/37056015\n//https://www.luogu.com.cn/record/37056631\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int ufototal=1,suiseitotal=1;\n    string ufo,suisei;\n    cin&gt;&gt;suisei;\n    for(int i=0;i&lt;suisei.size();i++){//建议用.size()函数，注意取值范围\n        suiseitotal*=(suisei[i]-'@');\n        //cout&lt;&lt;\"Total of suisei now is \"&lt;&lt;suiseitotal&lt;&lt;endl;\n    }\n    //cout&lt;&lt;suiseitotal&lt;&lt;\" MOD 47 = \";\n    suiseitotal%=47;\n    //cout&lt;&lt;suiseitotal&lt;&lt;endl;\n    cin&gt;&gt;ufo;\n    for(int i=0;i&lt;ufo.size();i++){ //建议用.size()函数，注意取值范围\n        ufototal*=ufo[i]-'@';\n        //cout&lt;&lt;\"Total of team now is \"&lt;&lt;ufototal&lt;&lt;endl;\n    }\n    //cout&lt;&lt;ufototal&lt;&lt;\" MOD 47 = \";\n    ufototal%=47;\n    //cout&lt;&lt;ufototal&lt;&lt;endl;\n    if(suiseitotal==ufototal){\n        cout&lt;&lt;\"GO\"&lt;&lt;endl;\n    }else{\n        cout&lt;&lt;\"STAY\"&lt;&lt;endl;\n    }\n    return 0;\n}\n[^1]: 虚拟偶像团体 Hololive 成员 “星街彗星” 粉丝群体自称。\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1179 [NOIP2010 普及组] 数字统计","url":"/posts/P1179-Counting-Number-NOIP2010J/","content":"\n/*\n  P1179 [NOIP2010 普及组] 数字统计\n  https://www.luogu.com.cn/problem/P1179\n\n  请统计某个给定范围[L,R]的所有整数中，数字 2 出现的次数。\n\n  比如给定范围[2,22]，数字22 在数 2中出现了 1 次，在数12 中出现 1 次，\n  在数 20 中出现 1 次，在数 21 中出现 1 次，在数 22 中出现 2 次，所以数字 2 在该范围内一共出现了 6次。\n*/\n\n//https://www.luogu.com.cn/record/57239444\n\n#include&lt;iostream&gt;\n#include&lt;cmath&gt;\nusing namespace std;\nint main(){\n    char n[6];\n    int m;\n    cin&gt;&gt;m;\n    int mm=m,mmm;\n    cin&gt;&gt;mmm;\n    for(int i=5;i&gt;=0;i--){\n        if(i!=0){\n            int nn=m/(pow(10,i)); //pow = ^\n            n[i]='0'+nn;\n            m=fmod(m,pow(10,i)); //fmod = %\n        }else{\n            n[0]='0'+m;\n        }\n    }\n    int ans=0;\n    for(int i=mm;i&lt;=mmm;i++){\n        for(int o=0;o&lt;=5;o++){\n            if(n[o]&gt;'9'){\n                n[o]='0';\n                n[o+1]++;\n            }\n        }\n        for(int o=0;o&lt;=5;o++){\n            if(n[o]=='2'){\n                ans++;\n            }\n        }\n        n[0]++;\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1177 【模板】快速排序","url":"/posts/P1177-Quicksort-Template/","content":"复健 ing…\n\n\n快速排序是 C.R.A.Hoare 于 1962 年提出的一种划分交换排序。它采用了一种分治的策略，通常称其为分治法 (Divide-and-ConquerMethod)。\n该方法的基本思想是：\n1．先从数列中取出一个数作为基准数。\n2．分区过程，将比这个数大的数全放到它的右边，小于或等于它的数全放到它的左边。\n3．再对左右区间重复第二步，直到各区间只有一个数。\n—— 菜鸟教程\n\n题目描述\n利用快速排序算法将读入的 NNN 个数从小到大排序后输出。\n快速排序是信息学竞赛的必备算法之一。对于快速排序不是很了解的同学可以自行上网查询相关资料，掌握后独立完成。（C++ 选手请不要试图使用 STL，虽然你可以使用 sort 一遍过，但是你并没有掌握快速排序算法的精髓。）\n输入格式\n第 111 行为一个正整数 NNN，第 222 行包含 NNN 个空格隔开的正整数 aia_iai​，为你需要进行排序的数，数据保证了 AiA_iAi​ 不超过 10910^9109。\n输出格式\n将给定的 NNN 个数从小到大输出，数之间空格隔开，行末换行且无空格。\n样例 #1\n样例输入 #1\n5\n4 2 4 5 1\n样例输出 #1\n1 2 4 4 5\n提示\n对于 20%20\\%20% 的数据，有 N≤103N\\leq 10^3N≤103；\n对于 100%100\\%100% 的数据，有 N≤105N\\leq 10^5N≤105。\n代码\n//P1177 【模板】快速排序\n//https://www.luogu.com.cn/problem/P1177\n\n//https://www.luogu.com.cn/record/83564299 RE*4 不幸地把数组大小看错了\n//https://www.luogu.com.cn/record/83564342 AC\n\n#include&lt;iostream&gt;\nusing namespace std;\nint n,a[100001];\nvoid swap(int x,int y){\n    int tmp=a[x];\n    a[x]=a[y];\n    a[y]=tmp;\n}\nvoid quicksort(int h,int e){\n    int j=a[(e+h)/2],x=h,y=e; //中位数、头、尾\n    while(x&lt;=y){\n        while(a[x]&lt;j) x++;\n        while(a[y]&gt;j) y--;\n        if(x&lt;=y){ //左右正常顺序排好后找不符合左右大小规律的数互换位置\n            swap(x,y);\n            x++;y--; //继续正常查找排序过程\n        }\n    }\n    //此处循环结束后，左右部分分割\n    if(h&lt;y) //左半部分排序\n        quicksort(h,y);\n    if(x&lt;e) //右半部分排序\n        quicksort(x,e);\n    return;\n}\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i];\n    }\n    quicksort(1,n);\n    for(int i=1;i&lt;=n;i++){\n        cout&lt;&lt;a[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;\"\\n\";\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1304 哥德巴赫猜想","url":"/posts/P1304-Goldbach-Conjecture/","content":"\n/*\n  P1304 哥德巴赫猜想\n  https://www.luogu.com.cn/problem/P1304\n\n  输入一个偶数 N(N&lt;=10000)，验证4~N所有偶数是否符合哥德巴赫猜想：任一大于 2 的偶数都可写成两个质数之和。\n  如果一个数不止一种分法，则输出第一个加数相比其他分法最小的方案。例如 10 , 10=3+7=5+5，则 10=5+5 是错误答案。\n*/\n\n//https://www.luogu.com.cn/record/57347821\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    bool zs[10001]={0};\n    for(int o=1;o&lt;=10000;o++){\n      int z=0;\n      for(int m=1;m&lt;=o;m++){\n        if(o%m==0){\n          z++;\n        }\n      }\n      if(z==2){\n        zs[o]=1;\n      }\n    }\n    for(int i=4;i&lt;=n;i+=2){\n      for(int o=2;o&lt;=n;o++){\n        if(zs[o]==1&amp;&amp;zs[i-o]==1){\n          cout&lt;&lt;i&lt;&lt;\"=\"&lt;&lt;o&lt;&lt;\"+\"&lt;&lt;i-o&lt;&lt;endl;\n          break;\n        }\n      }\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1308 统计单词数","url":"/posts/P1308-Counting-The-Word/","content":"要多想。\n\n/*--------------------------------------------------------------------------------\n  P1308 统计单词数\n  一般的文本编辑器都有查找单词的功能，该功能可以快速定位特定单词在文章中的位置，\n  有的还能统计出特定单词在文章中出现的次数。\n  现在，请你编程实现这一功能，具体要求是：\n  给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。\n  注意：匹配单词时，不区分大小写，但要求完全匹配，\n  即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同，\n  如果给定单词仅是文章中某一单词的一部分则不算匹配。\n--------------------------------------------------------------------------------*/\n//https://www.luogu.com.cn/record/37271277\n//感谢@Kio_ (ID:127925)\n//感谢@clock钟0622 (ID:323183)\n#include&lt;iostream&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nstring sentence,keyword;\nstring cutsentence[1000000];\nstring cutfull[1000000];\nint main(){\n    getline(cin,keyword); //读入数据\n    //cout&lt;&lt;\"Keyword=\"&lt;&lt;keyword&lt;&lt;endl;\n    getline(cin,sentence);\n    for(int i=0;i&lt;keyword.size();i++){ //谨 防 越 界 操 作 --- @Kio_\n        if(keyword[i]&gt;='A'&amp;&amp;keyword[i]&lt;='Z'){\n            keyword[i]+=32; //小写转换\n        }\n    }\n    for(int i=0;i&lt;sentence.size();i++){ //下同\n        if(sentence[i]&gt;='A'&amp;&amp;sentence[i]&lt;='Z'){\n            sentence[i]+=32; //小写转换\n        }\n    }\n    int blkflag=0; //blkflag:空格数量，反推单词数\n    for(int i=0;i&lt;sentence.size();i++){\n        if(sentence[i]==' '){\n            blkflag++; //标记空格数量\n        }\n    }\n    int cutnum=blkflag+1,cutflag=0; //cutnum:单词切片数量 cutflag:切片起始点位置 \n    int count=0;    //count:切片序号 --- @clock钟0622\n    //for(int i=0;i&lt;cutnum;i++){ // --- @Kio_\n        for(int j=cutflag;j&lt;=sentence.size();j++){ //从起始点开始对\n            if(sentence[j]==' '||sentence[j]=='\\0'){ //划定范围\n                for(int k=cutflag;k&lt;j;k++){ //确保在0&lt;k&lt;j范围内复制\n                    cutsentence[count]+=sentence[k]; //大数组-&gt;小数组 @clock钟0622\n                }\n                //&lt;&lt;\"cutsentence[\"&lt;&lt;count&lt;&lt;\"] = \"&lt;&lt;cutsentence[count]&lt;&lt;endl; // Debug --- @clock钟0622\n                //cutflag=j; //复制完把起始点调到空格后面的字母\n                count++;\n                cutflag=j+1; // 要的 --- @clock钟0622\n                //cout&lt;&lt;\"Begin with point \"&lt;&lt;cutflag&lt;&lt;\" .\"&lt;&lt;endl;\n                //break; //退出本轮循环 --- 去掉 @clock钟0622\n            }\n        }\n    //} // --- @clock钟0622\n    int sameflag=0,samewordflag=0,firstflagnum=0;\n    bool firstflag=false;\n    //int lencut; //@Kio_\n    for(int i=0;i&lt;cutnum;i++){ //以切片数为界限循环\n      //if(cutsentence[i].size()==keyword.size()){\n        if(cutsentence[i]==keyword){ // 若完全相同 --- 更改 @clock钟0622\n            samewordflag++;\n            if(firstflag==false){\n                if(i&gt;=1){\n                    for(int o=0;o&lt;i;o++){\n                        firstflagnum+=cutsentence[o].size();\n                    }\n                    firstflagnum+=i;\n                }else if(i=0){\n                    firstflagnum+=1;\n                }\n                firstflag=true;\n            }\n        }\n    }\n    if(samewordflag!=0){ //如果有相同的单词出现\n        cout&lt;&lt;samewordflag&lt;&lt;\" \"&lt;&lt;firstflagnum&lt;&lt;endl; //输出相同个数与初次出现的标识点\n    }else if(samewordflag==0){ //如果一个相同的也没有\n        cout&lt;&lt;\"-1\"&lt;&lt;endl; //输出\"-1\"\n    }\n    return 0; //结束\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1319 压缩技术","url":"/posts/P1319-Seven-Zip/","content":"这几天明显变懒狗了\n\n//洛谷OJ P1319 压缩技术\n//设某汉字由N × N的0和1的点阵图案组成。\n//我们依照以下规则生成压缩码。连续一组数值：\n//从汉字点阵图案的第一行第一个符号开始计算，按书写顺序从左到右，由上至下。\n//第一个数表示连续有几个0，第二个数表示接下来连续有几个1，\n//第三个数再接下来连续有几个0，第四个数接着连续几个1，以此类推……\n//例如: 以下汉字点阵图案：\n//          0001000\n//          0001000\n//          0001111\n//          0001000\n//          0001000\n//          0001000\n//          1111111\n//对应的压缩码是: 7 3 1 6 1 6 4 3 1 6 1 6 1 3 7 (第一个数是N,其余各位表示交替表示0和1的个数,压缩码保证 N * N = 交替的各位数之和)\n//https://www.luogu.com.cn/record/39209164\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n,x,p=0;\n    bool z=true,sq[40000]={false};\n    cin&gt;&gt;n;\n    while(p&lt;(n*n)){ //判断输入是否到头,此种判断方法貌似只能用scanf,cin貌似会无法转换\n        if(z){\n            cin&gt;&gt;x; //使用布尔变量z标记数字是0还是1\n            for(int i=1+p;i&lt;=p+x;i++){\n                sq[i]=0;\n            }\n            p+=x; //使用变量记录数加到了矩阵的哪个方位\n            z=!z; //两 极 反 转\n        }else if(z!=true){\n            cin&gt;&gt;x;\n            for(int i=1+p;i&lt;=p+x;i++){\n                sq[i]=1;\n            }\n            p+=x;\n            z=!z;\n        }\n    }\n    for(int i=1;i&lt;=p;i++){\n        cout&lt;&lt;sq[i];\n        if(i%n==0){\n            cout&lt;&lt;endl;\n        }\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1320 压缩技术（续集版）","url":"/posts/P1320-Seven-Zip-Plus/","content":"你已经学会了基本语法，现在来自己写一个 7-Zip 吧（？\n\n/*----------------------------/\n    P1320 压缩技术（续集版）    \n/----------------------------*/\n//https://www.luogu.com.cn/problem/P1320\n\n//设某汉字由N × N的0和1的点阵图案组成。\n//我们依照以下规则生成压缩码。连续一组数值：从汉字点阵图案的第一行第一个符号开始计算，按书写顺序从左到右，由上至下。\n//第一个数表示连续有几个0，第二个数表示接下来连续有几个1，第三个数再接下来连续有几个0，第四个数接着连续几个1，以此类推……\n\n//https://www.luogu.com.cn/record/52157798\n\n#include&lt;cstring&gt;\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    char ca[200],text[40000];\n    cin&gt;&gt;ca;\n    int n=strlen(ca); //size_t strlen(const char *); 返回一个字符串的长度\n    for(int i=0;i&lt;n;i++){\n        text[i]=ca[i];\n    }\n    for(int i=1;i&lt;n;i++){\n        cin&gt;&gt;ca;\n        strcat(text,ca); //char *strcat(char *dest, const char *src); 在字符串dest之后连接上src\n    }\n    cout&lt;&lt;n&lt;&lt;\" \";\n    char num='0';\n    int numc=0;\n    for(int i=0;i&lt;(n*n)+1;i++){\n        if(num==text[i]){\n            numc++;\n        }else if(text[i]!=num){\n            cout&lt;&lt;numc&lt;&lt;\" \";\n            if(num=='0'){\n                num='1';\n            }else if(num=='1'){\n                num='0';\n            }\n            numc=1;\n        }\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1424 小鱼的航程 (改进版)","url":"/posts/P1424-The-Journey-Of-Fishes-Plus-Ver/","content":"问题链接\n\n//洛谷 P1424 小鱼的路程（改进版）by yeszy\n//https://www.luogu.com.cn/problem/P1424\n//https://www.luogu.com.cn/record/30322448\n//这位大佬的题总是深入人心呢（\n#include&lt;bits/stdc++.h&gt; //万能通用符（\nusing namespace std;   //那么为什么它通用呢？你把它找到，打开，马上就明白了（\nint main(){\n\tunsigned long long n,lucheng; //超大wèishù路程（cue一下weishu老师）\n\tint x,loop; //整数的周x与循环loop次数\n\tlucheng=0; //路程归零\n\tcin&gt;&gt;x&gt;&gt;n; //输入数值\n\tfor(loop=0;loop&lt;n;loop++) //循环更改星期数\n\t{ \n\t\tif((x!=6)&amp;&amp;(x!=7)) //切记“同时”的符号是&amp;&amp;！不是||!\n\t\t{                //如果符号错误会直接导致下文多加2次数！（磨叽了三天得到的结论\n\t\t\tlucheng+=250; //如果不是星期六/日则走250m\n\t\t}\n\t\tif(x==7) //到了星期天\n\t\t{\n\t\t\tx=1; //就是星期一\n\t\t}\n\t\telse //剩下的日子\n\t\t{\n\t\t\tx++; //星期x+1\n\t\t}\n\t}\n\tcout&lt;&lt;lucheng; //一切结束后输出结果\n\treturn 0; //胜利是必然的嘛，怎么，有什么不满吗？（\n}\n被 cue 的那位大佬：\n· weishu - 知乎\n· tiann (weishu) · GitHub\n· 太极官网 - 太极 app，开启全新的 XPOSED 模块使用体验\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1423 小玉在游泳","url":"/posts/P1423-Yu-Is-Swimming/","content":"你游你的关我 🔨 事情啊啊啊啊\n\n //洛谷 P1423 小玉在游泳 作者yeszy\n//https://www.luogu.com.cn/problem/P1423\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n\tfloat mubiao,juli,everytime,step; //目标路程 走出去的路程 每次走的路程 走的步数\n\teverytime=2; //第一步走2m\n\tcin&gt;&gt;mubiao; //输入目标\n\twhile(mubiao&gt;=juli) //while循环，达到条件直接结束\n\t{\n\t\tjuli+=everytime; //上一次走出去的路程+每次里程=这一次的路程\n\t\teverytime*=0.98; //下次走的是上一次的98%\n\t\tstep++; //步数+1\n\t}\n\tcout&lt;&lt;step; //达到条件后循环结束，输出步数\n\treturn 0; //程序终结\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1328 生活大爆炸版石头剪刀布  [NOIP2014 提高组]","url":"/posts/P1328-Rock-Paper-Scissors-Big-Bang-ver-NOIP2014/","content":"先前用的是 switch-case 判断加分情况\n但是用的不熟练会直接 BOOM\n二维数组是个好东西。\n\n/*----------------------------------------\n                洛谷 P1328\n            生活大爆炸版石头剪刀布\n              NOIP2014 提高组\n----------------------------------------*/\n//https://www.luogu.com.cn/problem/P1328\n//https://www.luogu.com.cn/record/46035470\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int la,lb; //周期长度\n    int na[201],nb[201]; //周期内出拳状况\n    int t; //出拳次数\n\n    cin&gt;&gt;t&gt;&gt;la&gt;&gt;lb;\n    //输入出拳规律\n    for(int i=1;i&lt;=la;i++){\n        cin&gt;&gt;na[i];\n    }\n    for(int i=1;i&lt;=lb;i++){\n        cin&gt;&gt;nb[i];\n    }\n\n    //胜负判断\n    int as=0,bs=0; //分数变量\n    int al=1,bl=1; //当前出拳位置\n    int a[5][5]={{0,0,1,1,0},{1,0,0,1,0},{0,1,0,0,1},{0,0,1,0,1},{1,1,0,0,0}};\n    for(int i=1;i&lt;=t;i++){ //在有限次数内循环猜拳\n        //以下为先前旧式判断方法,使用switch-case组合\n        /*\n        if(na[al]==nb[bl]){ //平手\n            al++;\n            bl++;\n            if(al&gt;la)\n                al=1;\n            if(bl&gt;lb)\n                bl=1;\n            continue;\n        }\n        */\n\n        //胜负判断\n        //方法很暴力很麻烦但希望能管用（\n        //残酷的事实证明坚决不能用switch\n        //case条件整不好就全抓瞎了（\n        /*\n        if(na[al]==0) //小A出剪刀\n            switch(nb[bl]){\n                case 1:bs++;\n                case 2:as++;\n                case 3:as++;\n                case 4:bs++;\n            }\n        if(na[al]==1) //小A出石头\n        //从这里开始洛谷自己带的题图就没有示例了，需要自己推算。\n        //建议反推。\n            switch(nb[bl]){\n                case 0:as++;\n                case 2:bs++;\n                case 3:as++;\n                case 4:bs++;\n            }\n        if(na[al]==2) //小A出布\n            switch(nb[bl]){\n                case 0:bs++;\n                case 1:as++;\n                case 3:bs++;\n                case 4:as++;\n            }\n        if(na[al]==3) //小A出蜥蜴人\n            switch(nb[bl]){\n                case 0:bs++;\n                case 1:bs++;\n                case 2:as++;\n                case 4:as++;\n            }\n        if(na[al]==4) //小A出斯派克\n            switch(nb[bl]){\n                case 0:as++;\n                case 1:as++;\n                case 2:bs++;\n                case 3:bs++;\n            }\n        al++;\n        bl++;\n        if(al&gt;la)\n            al=1;\n        if(bl&gt;lb)\n            bl=1;\n        */\n    \n        //重制版\n        //使用二维数组加分\n        //看着很乱（\n        if(a[na[al]][nb[bl]]==0){\n            if(na[al]==nb[bl]){\n                al++;bl++;\n                if(al&gt;la) al=1;\n                if(bl&gt;lb) bl=1;\n                continue;\n            }\n            else bs++;\n        }\n        else if(a[na[al]][nb[bl]]==1){\n            as++;\n        }\n        al++;bl++;\n        if(al&gt;la) al=1;\n        if(bl&gt;lb) bl=1;\n    }\n    cout&lt;&lt;as&lt;&lt;\" \"&lt;&lt;bs&lt;&lt;endl;\n    return 0;\n}\n这道题拖了小半年了……\n这半年事情太多变化太大了……\nCSP2020 落选了\n整个人都快废了……\n复健中\n\n希望我能好起来吧.\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1443 马的遍历","url":"/posts/P1443-Horse-Traversal/","content":"这道题是备考摸鱼的时候做的，应该能算广度优先搜索的模板？\n\n很有用，也很绕，有点看不懂\n\n题目描述\n有一个 n×mn \\times mn×m 的棋盘，在某个点 (x,y)(x, y)(x,y) 上有一个马，要求你计算出马到达棋盘上任意一个点最少要走几步。\n输入格式\n输入只有一行四个整数，分别为 n,m,x,yn, m, x, yn,m,x,y。\n输出格式\n一个 n×mn \\times mn×m 的矩阵，代表马到达某个点最少要走几步（左对齐，宽 555 格，不能到达则输出 −1-1−1）。\n样例 #1\n样例输入 #1\n3 3 1 1\n样例输出 #1\n0    3    2    \n3    -1   1    \n2    1    4\n提示\n数据规模与约定\n对于全部的测试点，保证 1≤x≤n≤4001 \\leq x \\leq n \\leq 4001≤x≤n≤400，1≤y≤m≤4001 \\leq y \\leq m \\leq 4001≤y≤m≤400。\n代码\n// Problem: P1443 马的遍历\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P1443\n// Memory Limit: 125 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include&lt;iostream&gt;\n#include&lt;iomanip&gt;\n#include&lt;deque&gt;\nusing namespace std;\nint main(){\n    deque&lt;int&gt; x,y;\n    int n,m,xx,yy,hy[8]={1,2,2,1,-1,-2,-2,-1},zy[8]={-2,-1,1,2,2,1,-1,-2};\n    bool nn[401][401];\n    int ans[401][401];\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;yy&gt;&gt;xx;\n    x.push_back(xx);\n    y.push_back(yy);\n    nn[yy][xx]=1;\n    ans[yy][xx]=0;\n    while(!x.empty()){\n        for(int i=0;i&lt;8;i++){\n            if(x.front()+hy[i]&gt;=1&amp;&amp;x.front()+hy[i]&lt;=m&amp;&amp;y.front()+zy[i]&gt;=1&amp;&amp;y.front()+zy[i]&lt;=n&amp;&amp;nn[y.front()+zy[i]][x.front()+hy[i]]==0){\n                nn[y.front()+zy[i]][x.front()+hy[i]]=1;\n                ans[y.front()+zy[i]][x.front()+hy[i]]=ans[y.front()][x.front()]+1;\n                x.push_back(x.front()+hy[i]);\n                y.push_back(y.front()+zy[i]);\n            }\n        }\n        x.pop_front();\n        y.pop_front();\n    }\n    for(int i=1;i&lt;=n;i++){\n        for(int o=1;o&lt;=m;o++){\n            if(nn[i][o])\n                cout&lt;&lt;left&lt;&lt;setw(5)&lt;&lt;ans[i][o];\n            else cout&lt;&lt;left&lt;&lt;setw(5)&lt;&lt;\"-1\";\n        }\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}\n有一说一，全国乙卷是真难。\n前途未卜。\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1540 [NOIP2010 提高组] 机器翻译","url":"/posts/P1540-Machine-Translation-NOIP2010/","content":"四个月过去了\n终于咕出来一截（\n\n//P1540 [NOIP2010 提高组] 机器翻译\n//https://www.luogu.com.cn/problem/P1540\n\n//小晨的电脑上安装了一个机器翻译软件，他经常用这个软件来翻译英语文章。\n//这个翻译软件的原理很简单，它只是从头到尾，依次将每个英文单词用对应的中文含义来替换。\n//对于每个英文单词，软件会先在内存中查找这个单词的中文含义，如果内存中有，软件就会用它进行翻译；\n//如果内存中没有，软件就会在外存中的词典内查找，查出单词的中文含义然后翻译，并将这个单词和译义放入内存，以备后续的查找和翻译。\n//假设内存中有 M 个单元，每单元能存放一个单词和译义。每当软件将一个新单词存入内存前，如果当前内存中已存入的单词数不超过 M-1，软件会将新单词存入一个未使用的内存单元；\n//若内存中已存入 M 个单词，软件会清空最早进入内存的那个单词，腾出单元来，存放新单词。\n//假设一篇英语文章的长度为 N 个单词。给定这篇待译文章，翻译软件需要去外存查找多少次词典？假设在翻译开始前，内存中没有任何单词。\n\n//https://www.luogu.com.cn/record/50892096\n//https://www.luogu.com.cn/record/51423798\n//https://www.luogu.com.cn/record/51531867\n//https://www.luogu.com.cn/record/51531868\n//https://www.luogu.com.cn/record/51531869\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n\tint m,n,ans=0;\n\tint l=0;\n\tint w[1001];\n    for(int i=0;i&lt;=1001;i++){\n        w[i]=-1;\n    }\n\tcin&gt;&gt;m&gt;&gt;n;\n\tfor(int i=1;i&lt;=n;i++){\n\t\tint in;\n\t\tcin&gt;&gt;in;\n\t\tbool h=0;\n\t\tfor(int o=0;o&lt;=m;o++){\n\t\t\tif(in==w[o]){\n\t\t\t\th=1;\n\t\t\t}\t\n\t\t}\n\t\tif(h==0){\n\t\t\tif(l==m-1){ //内存范围：0-“m-1”\n\t\t\t\tfor(int o=0;o&lt;m;o++){\n\t\t\t\t\tw[o]=w[o+1];\n\t\t\t\t}\n\t\t\t\tw[m-1]=in;\n\t\t\t}else{\n\t\t\t\tw[l]=in;\n\t\t\t\tl++;\n\t\t\t}\n\t\t\tans++;\n\t\t}\t\n\t}\n\tcout&lt;&lt;ans&lt;&lt;endl;\n\treturn 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1567 统计天数","url":"/posts/P1567-Get-The-High-Temperature-Days/","content":"首先必须吐槽 Windows，咱也不知道是 TDM-GCC 的毛病还是 Windows 抽风，本地编译版本死活打不开……\n\n就算打开了也没办法输入输出，CPU 连动都不动…… 一会就闪退了\n\n消灭 Windows 暴政世界属于 Linux\n\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int a,max,ans=1,temp[1000000];\n    cin&gt;&gt;a;\n    for(int i=1;i&lt;=a;i++){\n        cin&gt;&gt;temp[i];\n        if(i&gt;=2){\n            if(temp[i]&gt;temp[i-1]){\n                ans++;\n                if(ans&gt;max){\n                    max=ans;\n                }\n            }else if(temp[i]&lt;temp[i-1]){\n                ans=1;\n            }\n        }\n    }\n    cout&lt;&lt;max&lt;&lt;endl;\n    return 0;\n}\n欢迎加入 #archlinux-cn / #archlinux-cn @ freenode\n","tags":["Luogu"]},{"title":"洛谷笔记 - P1553 数字反转（升级版）","url":"/posts/P1553-Overturn-Number-Advanced/","content":"费了起码一个半月（\n太弱了（\n\n//洛谷OJ P1553 数字反转（升级版）\n//给定一个数，请将该数各个位上数字反转得到一个新数。\n//这次与NOIp2011普及组第一题不同的是：这个数可以是小数，分数，百分数，整数。整数反转是将所有数位对调；\n//小数反转是把整数部分的数反转，再将小数部分的数反转，不交换整数部分与小数部分；\n//分数反转是把分母的数反转，再把分子的数反转，不交换分子与分母；\n//百分数的分子一定是整数，百分数只改变数字部分。\n//整数新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零；\n//小数新数的末尾不为0（除非小数部分除了0没有别的数，那么只保留1个0）;\n//分数不约分，分子和分母都不是小数（约分滴童鞋抱歉了，不能过哦。输入数据保证分母不为0），本次没有负数。\n//https://www.luogu.com.cn/record/37335609\n//https://www.luogu.com.cn/record/38664566\n//https://www.luogu.com.cn/record/38664969\n//https://www.luogu.com.cn/record/38665245\n//https://www.luogu.com.cn/record/39094527\n//https://www.luogu.com.cn/record/39097275\n//https://www.luogu.com.cn/record/39097539\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    string num,numcopy[3]; //用字符串记录数值与数值拷贝(拷贝分为符号前和符号后)\n    int switchnum=1,isdot=0,isslash=0,ispercent=0;\n    cin&gt;&gt;num;\n    if(num==\"0\"){ //如果前面是0而且还没有符号就直接输出\n        cout&lt;&lt;\"0\"&lt;&lt;endl;\n        return 0;\n    }\n    for(int i=0;i&lt;num.size();i++){\n        if(num[i]=='/'){ //斜杠标记\n            isslash=1;\n            switchnum=2;\n            continue;\n        }\n        if(num[i]=='.'){ //小数点标记\n            isdot=1;\n            switchnum=2;\n            continue;\n        }\n        if(num[i]=='%'){ //百分号标记\n            ispercent=1;\n            break;\n        }\n        numcopy[switchnum]+=num[i]; //按照switchnum数不同区分符号前后的数\n    }\n    if(numcopy[1]==\"0\"&amp;&amp;(numcopy[2]==\"0\"||numcopy[2]==\"\")){ //如果拷贝1和2都是0(即0/0,0.0的情况)\n        cout&lt;&lt;\"0\";\n        if(isdot) cout&lt;&lt;\".\";\n        if(isslash) cout&lt;&lt;\"/\";\n        if(ispercent){\n            cout&lt;&lt;\"%\"&lt;&lt;endl;\n            return 0;\n        }\n        cout&lt;&lt;\"0\"&lt;&lt;endl;\n        return 0;\n    }\n    int nozero=0;\n    if(numcopy[1]==\"0\"){ //符号前如果只有0则直接输出0\n        cout&lt;&lt;\"0\";\n    }else for(int i=numcopy[1].size()-1;i&gt;=0;i--){ //去除符号前数字开头的0\n        if(numcopy[1][i]=='0'&amp;&amp;nozero==0){\n                continue;\n        }else if(numcopy[1][i]!='0'){\n            nozero=1;\n        }\n        cout&lt;&lt;numcopy[1][i];\n    }\n    //小数点\n    if(isdot){\n        cout&lt;&lt;\".\";\n        if(numcopy[2]==\"0\"){\n            cout&lt;&lt;\"0\"&lt;&lt;endl;\n            return 0;\n        }\n        nozero=0;\n        for(int i=0;i&lt;numcopy[2].size();i++){\n            if(numcopy[2][i]=='0'&amp;&amp;nozero==0){ //跳过反转之后开头的0,直到发现不为0的数\n                nozero=0;\n                numcopy[2][i]='\\0'; //实现方法:0改写成\\0\n            }else if(numcopy[2][i]!='0'){\n                nozero=1;\n            }\n        }\n        for(int i=numcopy[2].size()-1;i&gt;=0;i--){\n            cout&lt;&lt;numcopy[2][i];\n        }\n        cout&lt;&lt;endl;\n    }\n    //分数\n    if(isslash){\n        cout&lt;&lt;\"/\";\n        if(numcopy[2]==\"0\"){\n            cout&lt;&lt;\"0\"&lt;&lt;endl;\n            return 0;\n        }\n        nozero=0;\n        for(int i=numcopy[2].size()-1;i&gt;=0;i--){\n            if(numcopy[2][i]=='0'&amp;&amp;nozero==0){ //跳过反转之后开头的0,直到发现不为0的数\n                continue; //实现方法:跳到下一位数\n            }else if(numcopy[2][i]!='0'){\n                nozero=1;\n            }\n            cout&lt;&lt;numcopy[2][i];\n        }\n        cout&lt;&lt;endl;\n    }\n    if(ispercent){ //百分号不用动符号后面的数\n        cout&lt;&lt;\"%\"&lt;&lt;endl;\n    }\n    return 0;\n}\n//拷贝用的数组好像偏大了……","tags":["Luogu"]},{"title":"洛谷笔记 - P1598 垂直柱状图","url":"/posts/P1598-Bar-Graph/","content":"刚开始全是 RE……\n后来才发现爆栈了……\n\n#include&lt;iostream&gt;\nusing namespace std;\n//以下数组需要开成全局数组，以免堆在main函数中爆栈\nint num[27]={0},maxx;\nchar star[101][101];\nstring tmp1,tmp2,tmp3,tmp4;\n\nint main(){\n    //getline:此函数可读取整行，包括前导和嵌入的空格，并将其存储在字符串对象中\n    getline(cin,tmp1);\n    getline(cin,tmp2);\n    getline(cin,tmp3);\n    getline(cin,tmp4);\n\n    //计数\n    for(int i=0;i&lt;tmp1.size();i++){ //i:y轴 j:x轴\n        if(tmp1[i]&gt;='A'&amp;&amp;tmp1[i]&lt;='Z'){\n            num[tmp1[i]-'A'+1]++;\n        }\n    }\n    for(int i=0;i&lt;tmp2.size();i++){\n        if(tmp2[i]&gt;='A'&amp;&amp;tmp2[i]&lt;='Z'){\n            num[tmp2[i]-'A'+1]++;\n        }\n    }\n    for(int i=0;i&lt;tmp3.size();i++){\n        if(tmp3[i]&gt;='A'&amp;&amp;tmp3[i]&lt;='Z'){\n            num[tmp3[i]-'A'+1]++;\n        }\n    }\n    for(int i=0;i&lt;tmp4.size();i++){\n        if(tmp4[i]&gt;='A'&amp;&amp;tmp4[i]&lt;='Z'){\n            num[tmp4[i]-'A'+1]++;\n        }\n    }\n    \n    //比较\n    for(int i=1;i&lt;=26;i++){\n        maxx=max(maxx,num[i]);\n    }\n    //字符注入\n    for(int i=1;i&lt;=26;i++){\n        for(int j=maxx;j&gt;=maxx-num[i]+1;j--){\n            star[j][i]='*'; //加星号\n        }\n        for(int j=maxx-num[i];j&gt;=1;j--){\n            star[j][i]=' '; //加空格\n        }\n        star[maxx+1][i]=i+'A'-1;\n    }\n    for(int i=1;i&lt;=maxx+1;i++){\n        for(int j=1;j&lt;=51;j++){\n            if(j%2==0){\n                cout&lt;&lt;\" \"; //加空格\n                continue;\n            }\n            cout&lt;&lt;star[i][j/2+1];\n        }\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1765 手机","url":"/posts/P1765-Old-Phone/","content":"暴力美学（\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    string i;\n    int num[26]={1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,1,2,3,1,2,3,4},ans=0; //高端的问题往往只需要最简单粗暴的解法（\n    getline(cin,i);\n    for(int s=0;s&lt;i.length();s++){\n        if(i[s]&gt;='a'&amp;&amp;i[s]&lt;='z'){\n            ans+=num[i[s]-'a'];\n        }\n        if(i[s]==' '){ //等号不双写，OI两行泪，教练马上到你家门口（\n            ans++;\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1634 禽兽的传染病","url":"/posts/P1634-Animal-s-Infectious-Diseases/","content":"\n/*----------------------/\n    P1634 禽兽的传染病\n/----------------------*/\n//https://www.luogu.com.cn/problem/P1634\n\n//禽兽患传染病了。一个禽兽会每轮传染 x 个禽兽。试问 n 轮传染后有多少禽兽被传染？\n//保证 x,n 以及答案都在 64 位无符号整数的表示范围内。\n\n//https://www.luogu.com.cn/record/34977422\n//https://www.luogu.com.cn/record/52601826\n//https://www.luogu.com.cn/record/52602287\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    unsigned long long i=1,m,n;\n    cin&gt;&gt;m&gt;&gt;n;\n    for(int o=1;o&lt;=n;o++){\n        i+=i*m;\n    }\n    cout&lt;&lt;i;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1554 梦中的统计","url":"/posts/P1554-Stat-In-Dream/","content":"\n//https://www.luogu.com.cn/problem/P1554\n//Author JOHNKRAM\n//P1554 梦中的统计\n//Bessie 处于半梦半醒的状态。过了一会儿，她意识到她在数数，不能入睡。\n//Bessie 的大脑反应灵敏，仿佛真实地看到了她数过的一个又一个数。她开始注意每一个数码（0…9）：每一个数码在计数的过程中出现过多少次？\n//给出两个整数 MM 和 NN (1&lt;=M&lt;=N&lt;=2000000000以及N-M&lt;=500000) ，求每一个数码出现了多少次。\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n,m;\n    unsigned long long num[10]={0};\n    cin&gt;&gt;m&gt;&gt;n;\n    for(int i=m;i&lt;=n;i++){\n        int a=i; //切记将变量复制出来，不然TLE\n        while(a&gt;0){\n            switch(a%10){\n                case 0:num[0]++;break;\n                case 1:num[1]++;break;\n                case 2:num[2]++;break;\n                case 3:num[3]++;break;\n                case 4:num[4]++;break;\n                case 5:num[5]++;break;\n                case 6:num[6]++;break;\n                case 7:num[7]++;break;\n                case 8:num[8]++;break;\n                case 9:num[9]++;break;\n            }\n            a/=10;\n        }\n    }\n    for(int i=0;i&lt;=9;i++){\n        cout&lt;&lt;num[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;\"\\n\";\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1601 A+B Problem（高精）","url":"/posts/P1601-A-Plus-B-Problem-High-Precision-Ver/","content":"我会写高精计算了（并不\n\n //洛谷OJ P1601 A+B Problem（高精）\n//高精度加法，相当于a+b problem，不用考虑负数.\n//我的第一道高精题。\n//https://www.luogu.com.cn/record/39152546\n#include&lt;iostream&gt;\nusing namespace std;\nint tmp;\nint highplus(char n1,char n2){ //高精度计算函数\n    int n=(n1-'0')+(n2-'0')+tmp;\n    tmp=n/10;\n    if(n+'0'&lt;='9'){\n        return n+'0';\n    }else return n-10+'0'; //回传时以对应的ASCII码形式回传\n}\nstring expand(string num1,string num2){ //string扩充函数\n    string num=\"\";\n    for(int i=1;i&lt;=num1.length()-num2.length();i++){\n        num+='0'; //前面塞0（塞爆！塞爆！（划掉\n    }\n    num+=num2;\n    return num;\n}\nint main(){\n    string num1,num2;\n    cin&gt;&gt;num1&gt;&gt;num2;\n    if(num1.length()&gt;num2.length()){ //先把两个字符串的length扩充到相等\n        num2=expand(num1,num2);\n    }else num1=expand(num2,num1);\n    string result=\"\"; //结果归零\n    for(int i=num1.length()-1;i&gt;=0;i--){\n        result+=highplus(num1[i],num2[i]);\n    }\n    if(tmp+'0'!='0'){ //如果tmp是0就不要加一位了\n    //tmp设成全局函数还是有用的\n        result+=tmp+'0';\n    }\n    for(int i=result.length()-1;i&gt;=0;i--){\n        cout&lt;&lt;result[i];\n    }\n    cout&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P1909 买铅笔","url":"/posts/P1909-Pencil/","content":"首先先谢谢各位大佬的指点（滑稽）\n指路求助贴\n\n//洛谷网校练习 P1909买铅笔 NOIP2016普及组\n#include&lt;bits/stdc++.h&gt; //通用头文件，明者自明（\nusing namespace std;\nint main(){\n\tint need,number[3],price[3],zong[3],boxnum[3],ans,i,yushu[3];\n\t//need需求数量，numberX包装中的支数，priceX每盒价钱，boxnum盒数，zong总价钱，ans最终最小值答案，i下面for循环用\n\t//yushu用于检查是否应该多弄一盒\n\tcin&gt;&gt;need; //输入需求\n\tans=2147483647; //拿int函数限定值堵住BUG的嘴（\n\t\n\tfor (i=0;i&lt;3;++i) //限定三组\n\t{\n\t\tcin&gt;&gt;number[i]&gt;&gt;price[i]; //输入支数和价格\n\t\tboxnum[i]=need/number[i]; //统计盒数\n\t\tyushu[i]=need%number[i]; //求需要的数量与购买数量的余数\n\t\tif(yushu[i]!=0) //有余数则盒数+1\n\t\t\tboxnum[i]=boxnum[i]+1; //朴实的+1方法（其实是忘了是boxnum++还是++boxnum了）\n\t\tzong[i]=boxnum[i]*price[i]; //统计总价格\n\t\tif(zong[i]&lt;ans) //取最小值\n\t\t\tans=zong[i];\n\t}\n\tcout&lt;&lt;ans; //输出\n\treturn 0; //GAME OVER!\n}\n//肯定没有其他人写得好啦（\n本文首发于洛谷博客 仙 人 指 路\n","tags":["Luogu"]},{"title":"洛谷笔记 - P2010 [NOIP2016 普及组] 回文日期","url":"/posts/P2010-Plalindrome-Date-NOIP2016J/","content":"复健训练，感觉良好…… 吧\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n\tint d[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};\n\tint ans=0,a,b,c,dd;\n\tcin&gt;&gt;a&gt;&gt;b;\n\tfor(int i=1;i&lt;=12;i++){\n\t\tfor(int p=1;p&lt;=d[i];p++){\n\t\t\tc=i*100+p;\n\t\t\tdd=c+(p%10)*10000000+(p/10)*1000000+(i%10)*100000+(i/10)*10000;\n\t\t\tif(dd&lt;a||dd&gt;b) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout&lt;&lt;ans&lt;&lt;endl;\n}\n","tags":["Luogu"]},{"title":"洛谷笔记 - P2058 [NOIP2016 普及组] 海港","url":"/posts/P2058-Seaside-Bay-NOIP2016/","content":"栈真好用。\n\n题目背景\nNOIP2016 普及组 T3\n题目描述\n小 K 是一个海港的海关工作人员，每天都有许多船只到达海港，船上通常有很多来自不同国家的乘客。\n小 K 对这些到达海港的船只非常感兴趣，他按照时间记录下了到达海港的每一艘船只情况；对于第 i 艘到达的船，他记录了这艘船到达的时间 ti (单位：秒)，船上的乘 客数 kik_iki​，以及每名乘客的国籍 xi,1,xi,2,…,xi,kx_{i,1}, x_{i,2},…,x_{i,k}xi,1​,xi,2​,…,xi,k​。\n小 K 统计了 nnn 艘船的信息，希望你帮忙计算出以每一艘船到达时间为止的 242424 小时 (242424 小时 =864008640086400 秒）内所有乘船到达的乘客来自多少个不同的国家。\n形式化地讲，你需要计算 nnn 条信息。对于输出的第 iii 条信息，你需要统计满足 $ t_i-86400&lt;t_p \\le t_i 的船只的船只的船只 p，在所有的，在所有的，在所有的 x_{p,j}$ 中，总共有多少个不同的数。\n输入格式\n第一行输入一个正整数 nnn，表示小 K 统计了 nnn 艘船的信息。\n接下来 nnn 行，每行描述一艘船的信息：前两个整数 tit_iti​和 kik_iki​分别表示这艘船到达海港的时间和船上的乘客数量，接下来 kik_iki​个整数 xi,jx_{i,j}xi,j​表示船上乘客的国籍。\n保证输入的 tit_iti​是递增的，单位是秒；表示从小 K 第一次上班开始计时，这艘船在第 tit_iti​秒到达海港。\n保证 1≤n≤1051 \\le n \\le 10^51≤n≤105， ，1≤xi,j≤1051\\le x_{i,j} \\le 10^51≤xi,j​≤105， 1≤ti−1≤ti≤1091 \\le t_{i-1}\\le  t_i    \\le  10^91≤ti−1​≤ti​≤109。\n其中∑ki\\sum{k_i}∑ki​表示所有的 kik_iki​的和。\n输出格式\n输出 nnn 行，第 iii 行输出一个整数表示第 iii 艘船到达后的统计信息。\n输入输出样例\n样例输入 1\n3\n1 4 4 1 2 2\n2 2 2 3\n10 1 3\n样例输出 1\n3\n4\n4\n样例输入 2\n4\n1 4 1 2 2 3\n3 2 2 3\n86401 2 3 4\n86402 1 5\n样例输出 2\n3\n3\n3\n4\n说明 / 提示\n【样例解释 1】\n第一艘船在第 111 秒到达海港，最近 242424 小时到达的船是第一艘船，共有 444 个乘客， 分别是来自国家 4,1,2,24,1,2,24,1,2,2，共来自 333 个不同的国家；\n第二艘船在第 222 秒到达海港，最近 242424 小时到达的船是第一艘船和第二艘船，共有个乘客，分别是来自国家 4,1,2,2,2,34,1,2,2,2,34,1,2,2,2,3，共来自 444 个不同的国家；\n第三艘船在第 101010 秒到达海港，最近 242424 小时到达的船是第一艘船、第二艘船和第 三艘船，共有 4+2+1=74+ 2+1=74+2+1=7 个乘客，分别是来自国家 4,1,2,2,2,3,34,1,2,2,2,3,34,1,2,2,2,3,3，共来自 444 个不同 的国家。\n【样例解释 2】\n第一艘船在第 111 秒到达海港，最近 242424 小时到达的船是第一艘船，共有 444 个乘客，分别是来自国家 1,2,2,31,2,2,31,2,2,3，共来自 333 个不同的国家。\n第二艘船在第 333 秒到达海港，最近 242424 小时到达的船是第一艘船和第二艘船，共有 4+2=64+2=64+2=6 个乘客，分别是来自国家 1,2,2,3,2,31,2,2,3,2,31,2,2,3,2,3，共来自 333 个不同的国家。\n第三艘船在第 864018640186401 秒到达海港，最近 242424 小时到达的船是第二艘船和第三艘船，共有 2+2=42+2=42+2=4 个乘客，分别是来自国家 2,3,3,42,3,3,42,3,3,4，共来自 333 个不同的国家。\n第四艘船在第 864028640286402 秒到达海港，最近 242424 小时到达的船是第二艘船、第三艘船和第四艘船，共有 2+2+1=52+2+1=52+2+1=5 个乘客，分别是来自国家 2,3,3,4,52,3,3,4,52,3,3,4,5，共来自 444 个不同的国家。\n【数据范围】\n\n#include&lt;iostream&gt;\n#include&lt;stack&gt;\nusing namespace std;\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        int k;\n        cin&gt;&gt;k;\n        int a[100001],b[100001];\n        stack&lt;int&gt; ii;\n        for(int p=1;p&lt;=k;p++){\n            cin&gt;&gt;a[p];\n        }\n        for(int p=1;p&lt;=k;p++){\n            cin&gt;&gt;b[p];\n        }\n        int l=1;\n        for(int p=1;p&lt;=k;p++){\n            ii.push(a[p]);\n            while(ii.top()==b[l]){\n                ii.pop();\n                l++;\n                if(ii.empty()){\n                    break;\n                }\n            }\n        }\n        if(ii.empty()){\n            cout&lt;&lt;\"Yes\"&lt;&lt;endl;\n        }else cout&lt;&lt;\"No\"&lt;&lt;endl;\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P2670 扫雷游戏","url":"/posts/P2670-Minesweeper/","content":"XY 值弄反，静态调试（？）语句忘删，心态爆炸（\n\n/*----------------------------------------\n+        洛谷OJ    P2670   扫雷游戏       +\n+ https://www.luogu.com.cn/problem/P2670 +\n----------------------------------------*/\n//https://www.luogu.com.cn/record/39099059\n#include&lt;iostream&gt;\nusing namespace std;\n//参考了 https://www.luogu.com.cn/blog/wxw/solution-p2670 声称不会TLE的代码\n//不会用gdb的一定要记得写完代码把debug用的语句 删 掉 哦\nint main(){\n    char boom;\n    bool sign[105][105]={0};\n    int xlimit,ylimit;\n    cin&gt;&gt;ylimit&gt;&gt;xlimit; //输入y值x值限度 不要弄反！！！！！\n    for(int i=1;i&lt;=ylimit;i++){\n        for(int n=1;n&lt;=xlimit;n++){\n            cin&gt;&gt;boom; //输入地雷图\n            if(boom=='*'){\n                sign[n][i]=1;//地雷标记\n            }\n        }\n    }\n    for(int i=1;i&lt;=ylimit;i++){\n        for(int o=1;o&lt;=xlimit;o++){\n            if(sign[o][i]==1){\n                cout&lt;&lt;\"*\";\n            }else cout&lt;&lt;sign[o-1][i-1]+sign[o-1][i]+sign[o-1][i+1]+sign[o][i-1]+sign[o][i+1]+sign[o+1][i-1]+sign[o+1][i]+sign[o+1][i+1];\n        }\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P2141 珠心算测验","url":"/posts/P2141-Zhu-Xin-Suan-Test/","content":"这道题花了我半个上午……\n重点在查重的方案上\n\n/*P2141 珠心算测验\n  珠心算是一种通过在脑中模拟算盘变化来完成快速运算的一种计算技术。珠心算训练，既能够开发智力，又能够为日常生活带来很多便利，因而在很多学校得到普及。\n  某学校的珠心算老师采用一种快速考察珠心算加法能力的测验方法。他随机生成一个正整数集合，集合中的数各不相同，然后要求学生回答：\n  其中有多少个数，恰好等于集合中另外两个（不同的）数之和？\n  最近老师出了一些测验题，请你帮忙求出答案。\n  (本题目为2014NOIP普及T1)\n  INPUT\n  共两行，第一行包含一个整数n，表示测试题中给出的正整数个数。\n  第二行有nn个正整数，每两个正整数之间用一个空格隔开，表示测试题中给出的正整数。*/\n//https://www.luogu.com.cn/record/34971754\n//https://www.luogu.com.cn/record/36978467\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int i,n[101],ans=0,check;//i:心算的数字的数目,3&lt;i&lt;100.n[100]:测试题中的正整数.ans:答案\n    cin&gt;&gt;i;\n    for(int a=1;a&lt;=i;a++){\n        cin&gt;&gt;n[a];\n    }\n    for(int locate=1;locate&lt;=i-1;locate++){//locate:当前心算数的位置\n        for(int locateplus=locate+1;locateplus&lt;=i;locateplus++){//locateplus:与当前心算数相加的数的位置\n            int result=n[locate]+n[locateplus];\n            int chongfu=1,num[1000000];\n            for(check=1;check&lt;=i;check++){\n                if(result==n[check]){//当遇到相等数时\n                    if(num[result]==1){//验证该数是否出现过\n                        //cout&lt;&lt;\"Number \"&lt;&lt;result&lt;&lt;\" has been flaged,skipping.\"&lt;&lt;endl;//debug\n                        continue;\n                    }else num[result]=1;/*cout&lt;&lt;\"Number \"&lt;&lt;result&lt;&lt;\" has bot been signed, signing\"&lt;&lt;endl;*/ans++;\n                }\n            }\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P3156 【深基 15. 例 1】询问学号","url":"/posts/P3156-Asking-For-Student-ID-Number/","content":"【数据结构 1-1】线性表的第一题\n除此之外无一能做（\n太弱小了 —— 没有力量 ——\n\n\n//P3156 【深基15.例1】询问学号\n//题目提供者 深入浅出\n//难度 入门\n//https://www.luogu.com.cn/problem/P3156\n\n//有 n(n &lt;= 2 * 10^6) 名同学陆陆续续进入教室。我们知道每名同学的学号（在 1 到 10^9 之间），按进教室的顺序给出。\n//上课了，老师想知道第 i 个进入教室的同学的学号是什么（最先进入教室的同学 i=1），询问次数不超过 10^5 次。\n\n//https://www.luogu.com.cn/record/51603358 输出格式错误\n//https://www.luogu.com.cn/record/51603385 输出格式错误\n//https://www.luogu.com.cn/record/51603398\n\n#include&lt;iostream&gt;\nusing namespace std;\nlong long a[2000001]; //谨防mian(划掉)main参数爆变量\nint main(){\n    int n,m,i;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int o=1;o&lt;=n;o++){\n        cin&gt;&gt;a[o];\n    }\n    for(int o=1;o&lt;=m;o++){\n        int s;\n        cin&gt;&gt;s;\n        if(o==m){\n            cout&lt;&lt;a[s];\n        }else cout&lt;&lt;a[s]&lt;&lt;endl;\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P2433 【深基 1-2】小学数学 N 合一","url":"/posts/P2433-Primary-School-Math-N-In-One-DaWu/","content":"你管这叫小学题？\n\n//P2433 【深基1-2】小学数学 N 合一\n//作者 深入浅出\n//小学数学(大嘘)\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    int num;\n    cin&gt;&gt;num;\n    //请输出 I love Luogu!\n    if(num==1){\n        cout&lt;&lt;\"I love Luogu!\";\n        return 0;\n    }\n    //这里有 10 个苹果，小A 拿走了 2 个，Uim 拿走了 4 个，八尾勇拿走剩下的所有的苹果。我们想知道：\n    //小A 和 Uim 两个人一共拿走多少苹果?八尾勇能拿走多少苹果？\n    //现在需要编写一个程序，输出两个数字作为答案，中间使用空格分开。\n    else if(num==2){\n        cout&lt;&lt;2+4&lt;&lt;\" \"&lt;&lt;10-2-4;\n        return 0;\n    }\n    //现在有 14 个苹果。要均分给 4 名同学，分不掉的苹果放回冰箱。请问：\n    //每位同学能分得几个苹果？\n    //一共分出去多少苹果？\n    //把几个苹果放回冰箱？\n    //现在需要编写一个程序，输出三个数字作为答案，每个数字一行。\n    else if(num==3){\n        cout&lt;&lt;14/4&lt;&lt;endl&lt;&lt;14/4*4&lt;&lt;endl&lt;&lt;14%4;\n        return 0;\n    }\n    //现在有 500 毫升的肥宅快乐水，要均分给 3 名同学，每位同学可以分到多少毫升？请输出一个数字作为输出。保留 6 位有效数字，且不使用科学计数法。\n    else if(num==4){\n        cout&lt;&lt;fixed&lt;&lt;setprecision(3)&lt;&lt;1.0*500/3;\n        return 0;\n    }\n    //甲列火车长 260 米，每秒行 12 米；乙列火车长 220 米，每秒行 20 米，两车相向而行，从两车车头相遇时开始计时，多长时间后两车车尾相离？已知答案是整数。\n    else if(num==5){\n        cout&lt;&lt;(220+260)/(20+12);\n        return 0;\n    }\n    //一个长方形长宽分别是 6cm、9cm，求它的对角线长度（cm）。直接使用 cout 输出。\n    else if(num==6){\n        cout&lt;&lt;sqrt(6*6+9*9);\n        return 0;\n    }\n    //Uim 银行账户里面有100元。经过了下面的操作：\n    //往里面存了 10 元；\n    //购物花掉了 20 元；\n    //把里面的钱全部取出。\n    //请在每次操作后输出账户余额，并使用换行符隔开。\n    else if(num==7){\n        cout&lt;&lt;100+10&lt;&lt;endl&lt;&lt;100+10-20&lt;&lt;endl&lt;&lt;0;\n        return 0;\n    }\n    //当半径为 r=5，请输出圆的周长、面积和球体积。取 π=3.141593。请直接使用 cout 输出答案，每行一个数字。\n    else if(num==8){\n        double const pi=3.141593;\n        double const r=5;\n        cout&lt;&lt;pi*r*2&lt;&lt;endl&lt;&lt;pi*r*r&lt;&lt;endl&lt;&lt;4.0/3*pi*r*r*r&lt;&lt;endl; //我小学白上了\n        return 0;\n    }\n    //一只小猴买了若干个桃子。第一天他刚好吃了这些桃子的一半，又贪嘴多吃了一个；\n    //第二天他也刚好吃了剩余桃子的一半，贪嘴多吃了一个；第三天他又刚好吃了剩下的桃子的一半，并贪嘴多吃了一个。\n    //第四天起来一看，发现桃子只剩下一个了。请问小猴买了几个桃子？\n    //此题与bilibili虚拟up主黑桃影无关（\n    else if(num==9){\n        int peach;\n        peach=(((((1+1)*2)+1)*2)+1)*2;\n        cout&lt;&lt;peach;\n        return 0;\n    }\n    //洛谷的评测任务是单位时间内均匀增加的。\n    //8 台评测机 30 分钟可以刚好把评测队列中的程序评测完毕，10 台评测机 6 分钟可以刚好把评测队列中的程序评测完毕，\n    //请问几台评测机可以在 10 分钟时刚好把评测队列中的程序评测完毕？\n    else if(num==10){\n        cout&lt;&lt;(15+7.5*10)/10; //抄的(\n        return 0;\n    }\n    //小A跑步速度 5m/s，八尾勇跑步速度 8m/s，八尾勇在小A后面 100m，\n    //他们同时起跑，请问需要多长时间八尾勇可以追上小A？\n    //输出一个数字表示答案，使用 cout 直接输出。\n    else if(num==11){\n        cout&lt;&lt;1.0*100/3;\n        return 0;\n    }\n    //大家都知道有 26 个英文字母，其中A是第一个字母。现在请编程求出：\n    //M 是字母表中的第几个字母？\n    //第 18 个字母是什么？\n    //输出一个数字和一个字母，使用换行隔开。\n    else if(num==12){\n        cout&lt;&lt;(int)('M'-'A')+1&lt;&lt;endl&lt;&lt;(char)(18+'A'-1);\n        return 0;\n    }\n    //小A有两块球形橡皮泥，一个半径是 4，一个半径是 10。\n    //他想把这两块橡皮泥揉在一起，然后塑造成一个正方体，请问这个正方体的棱长是多少？如果结果不是整数，则舍去小数点之后的数字。\n    //取π=3.141593。\n    else if(num==13){\n        double const pi=3.141593;\n        double V=pi*4*4*4*4/3+pi*10*10*10*4/3;\n        cout&lt;&lt;floor(pow(V,1.0/3))&lt;&lt;endl; //你管这玩意，叫小学数学？？？\n        return 0;\n    }\n    //根据咕咕网校的预测，当课程定价为 110 元时，会有 10 人报名。如果课程价格每降低 1 元，就会多 1 名报名者（反之亦然）。\n    //如果希望总共能收到 3500 元学费的话，那么应该定价多少呢？\n    //已知本题有两个答案符合要求，则取较小的那一个。如果这个答案不是整数，则需四舍五入精确到整数。\n    else if(num==14){\n        cout&lt;&lt;50&lt;&lt;endl; //鲨了我，就现在(\n        return 0;\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5587 打字练习","url":"/posts/P5587-Keyboard-Typing-Training/","content":"做这道题的时候我觉得我确实是个铸币。\n\n随爹了属于是\n\n题目描述\nR 君在练习打字。\n有这样一个打字练习网站，给定一个范文和输入框，会根据你的输入计算准确率和打字速度。可以输入的字符有小写字母、空格和 .（英文句号），输入字符后，光标也会跟着移动。\n输入的文本有多行，R 君可以通过换行键来换行，换行后光标移动到下一行的开头。\nR 君也可以按退格键（为了方便，退格键用 &lt; 表示），以删除上一个打的字符，并将光标回移一格。特殊的，如果此时光标已经在一行的开头，则不能继续退格（即忽略此时输入的退格键）。\n网站的比较方式遵循以下两个原则：\n\n逐行比较，即对于范文和输入的每一行依次比较，不同行之间不会产生影响，多余的行会被忽略。\n逐位比较，即对于两行的每一个字符依次比较，当且仅当字符相同时才会被算作一次正确，否则会被算作错误。计算答案时，只统计相同的字符个数。\n\n需要注意的是，回车键不会被计入正确的字符个数。\nR 君看到网站上显示他花了 TTT 秒完成了这次的打字游戏，请你计算出他的 KPM（Keys per minutes，每分钟输入的字符个数），答案四舍五入保留整数部分。\n输入格式\nR 君会依次告诉你网站的范文，他的输入和花费的时间。\n其中范文和输入将会这样读入：给定若干行字符串，以单独的一行 EOF 结束，其中 EOF 不算入输入的文本。\n最后一行一个整数 TTT，表示他打字花费了 TTT 秒。\n可以参考样例输入输出文件和样例解释辅助理解。\n输出格式\n一行一个整数，表示 KPM。\n输入输出样例\n样例输入 1\nhello world.\naaabbbb\nx\nEOF\nheelo world.\naaacbbbb\ny&lt;x\nEOF\n60\n样例输出 1\n18\n说明 / 提示\n样例解释\n第一行的正确字符数为 11。\n第二行的正确字符数为 6，错误的字符 c 仍会占据一个位置。\n第三行的正确字符数为 1，R 君使用退格键删除了被打错的字符 y\n数据范围\n对于 20%20\\%20% 的数据，不存在换行键。\n对于 40%40\\%40% 的数据，不存在退格键。\n对于 100%100\\%100% 的数据，T≤103T \\leq 10^3T≤103，保证每个文本段的总字符数（包括换行）不超过 10510^5105 个且总行数不超过 10410^4104。\n// Problem: P5587 打字练习\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5587\n// Memory Limit: 500 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include&lt;iostream&gt;\n#include&lt;deque&gt; //deque必备\n//https://zh.cppreference.com/w/cpp/container/deque\n//https://oi-wiki.org/lang/csl/sequence-container/#deque\n#include&lt;string&gt;\nusing namespace std;\nint main(){\n    deque&lt;char&gt; a[10000]; //原方案是string，没玩明白+想试试STL的新东西\n    string s;\n    int sn=0;\n    while(1){ //循环读入，至EOF为止\n        //bool h=1; //玩砸了的一个判断尝试\n        //开头的退格键应该忽略，但是判断写的不是很好，把后两个点搞RE乐\n        getline(cin,s);\n        if(s==\"EOF\"){\n            break;\n        }\n        for(unsigned long long int i=0;i&lt;s.length();i++){\n            if(s[i]=='&lt;'){\n                //if(h){\n                if(a[sn].empty()){ \n                    continue;\n                }else{\n                    a[sn].pop_back();\n                }\n            }else{\n                a[sn].push_back(s[i]);\n                //h=0;\n            }\n        }\n        sn++;\n    }\n    int w=0,sm=0;\n    while(1){\n        deque&lt;char&gt; b;\n        getline(cin,s);\n        if(s==\"EOF\"){\n            break;\n        }\n        if(sm&gt;sn){\n            continue;\n        }\n        for(unsigned long long int o=0;o&lt;s.length();o++){\n            if(s[o]=='&lt;'){\n                if(b.empty()){\n                    continue;\n                }else{\n                    b.pop_back();\n                }\n            }else{\n                b.push_back(s[o]);\n            }\n        }\n        while(a[sm].empty()!=1){\n            if(b.empty()){\n                break;\n            }\n            if(a[sm].front()==b.front()){\n                w++;\n            }\n            a[sm].pop_front();\n            b.pop_front();\n        }\n        sm++;\n    }\n    double se;\n    cin&gt;&gt;se;\n    cout&lt;&lt;(int)(w*60.0/se+0.5)&lt;&lt;endl; //double转int输出会取整，+0.5可起到四舍五入的作用\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5015 标题统计","url":"/posts/P5015-Title-Statistics/","content":"在学校机房做的。\n\n//凯凯刚写了一篇美妙的作文，请问这篇作文的标题中有多少个字符？ \n//注意：标题中可能包含大、小写英文字母、数字字符、空格和换行符。统计标题字 符数时，空格和换行符不计算在内。\n//输入文件只有一行，一个字符串 ss。\n//输出文件只有一行，包含一个整数，即作文标题的字符数（不含空格和换行符）。\n//https://www.luogu.com.cn/record/34976915\n//https://www.luogu.com.cn/record/34976929\n//https://www.luogu.com.cn/record/34976938\n//https://www.luogu.com.cn/record/34976962\n//https://www.luogu.com.cn/record/34977007\n#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nint main(){\n\tint ans=0;\n\tchar s[5];\n\tgets(s); //stdio.h或cstdio,适用于char变量,切忌string\n\tint lengths=strlen(s);//cstring\n\tfor(int i=0;i&lt;lengths;i++){\n\t\tif(s[i]&gt;='a' &amp;&amp; s[i]&lt;='z'){\n\t\t\tans++;\n\t\t}\n\t\tif(s[i]&gt;='A' &amp;&amp; s[i]&lt;='Z'){\n\t\t\tans++;\n\t\t}\n\t\tif(s[i]&gt;='0' &amp;&amp; s[i]&lt;='9'){\n\t\t\tans++;\n\t\t}\n\t}\n\tcout&lt;&lt;ans&lt;&lt;endl;\n\treturn 0;\n}\n\n","tags":["Luogu"]},{"title":"洛谷笔记 - P5707 【深基 2. 例 12】上学迟到","url":"/posts/P5707-Late-For-School/","content":"\n    \n都要迟到了为什么还在垃圾分类啊喂！\n\n/*--------------------------------/\n    P5707 【深基2.例12】上学迟到\n/--------------------------------*/\n//https://www.luogu.com.cn/problem/P5707\n\n//yyy 的学校要求早上 8 点前到达。学校到 yyy 的家一共有 s(s&lt;=10000) 米，\n//而 yyy 可以以 v(v&lt;10000) 米每分钟的速度匀速走到学校。\n//此外在上学路上它还要额外花 10 分钟时间进行垃圾分类。\n//请问为了避免迟到 yyy 最晚什么时候出门？\n//输出 HH:MM 的时间格式，不足两位时补零。由于路途遥远， yyy 可能不得不提前一天出发，不过不可能提前超过一天。\n\n//https://www.luogu.com.cn/record/51650685\n//https://www.luogu.com.cn/record/51650724\n//https://www.luogu.com.cn/record/51650764\n//https://www.luogu.com.cn/record/51650769\n//https://www.luogu.com.cn/record/52423311\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int s,v;\n    cin&gt;&gt;s&gt;&gt;v;\n\n    int hh=8,mm=0,m=s/v+10;\n    if(s%v){\n        m++;\n    }\n    mm-=m;\n    while(mm&lt;0){\n        mm+=60;\n        hh--;\n        if(hh&lt;0){\n            hh+=24;\n        }\n    }\n\n    if(hh&lt;10){\n        cout&lt;&lt;\"0\"&lt;&lt;hh&lt;&lt;\":\";\n    }else cout&lt;&lt;hh&lt;&lt;\":\";\n    if(mm&lt;10){\n        cout&lt;&lt;\"0\"&lt;&lt;mm&lt;&lt;endl;\n    }else cout&lt;&lt;mm&lt;&lt;endl;\n    \n    return 0;\n}\n","tags":["Luogu"]},{"title":"洛谷笔记 - P5708 【深基 2. 习 2】三角形面积","url":"/posts/P5708-Triangle/","content":"遇到某些不知道怎么拼写的数学符号？\n要么多敲点 LaTeX\\LaTeXLATE​X 要么多学点英语\n\n //P5708 【深基2.习2】三角形面积\n//作者 深入浅出\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    double p,a,b,c,i;\n    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\n    p=0.5*(a+b+c);\n    i=sqrt(p*(p-a)*(p-b)*(p-c)); //sqrt:根号函数,不知道的建议多敲LaTeX(\n    cout&lt;&lt;fixed&lt;&lt;setprecision(1)&lt;&lt;i;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5706 【深基 2. 例 8】再分肥宅水","url":"/posts/P5706-Coke/","content":"好久没整了……\n英语不行，那是真的不行\n\n //P5706 【深基2.例8】再分肥宅水\n//作者 深入浅出\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    float t;\n    int n;\n    cin&gt;&gt;t&gt;&gt;n;\n    cout&lt;&lt;fixed&lt;&lt;setprecision(3)&lt;&lt;t/n&lt;&lt;endl; //fixed确定精度，setprecision确定小数点位数\n    cout&lt;&lt;n*2; //为什么要分开输出？脑子不好使了呗（划掉）\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5725 【深基 4. 习 8】求三角形","url":"/posts/P5725-Calculating-Triangle/","content":"这道题磨磨蹭蹭了好几天……\n\n//P5725 【深基4.习8】求三角形\n//模仿例题，打印出不同方向的正方形，然后打印三角形矩阵。中间有个空行。\n//https://www.luogu.com.cn/record/36420077\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int hang,lie,input,i=1;\n    cin&gt;&gt;input;\n    //正方形\n    for(hang=1;hang&lt;=input;hang++){\n        for(lie=1;lie&lt;=input;lie++){\n            if(i&lt;10){\n                cout&lt;&lt;\"0\"&lt;&lt;i;\n            }else{\n                cout&lt;&lt;i;\n            }\n            i++;\n            if(lie==input){\n                cout&lt;&lt;\"\\n\";\n            }\n        }\n    }\n    cout&lt;&lt;\"\\n\";\n\n    //三角形\n    i=1;\n    int o=1;                          //记录数值个数\n     for(hang=1;hang&lt;=input;hang++){\n        int p=input-o;                //记录空格数\n        for(lie=1;lie&lt;=input;lie++){\n            if(p&gt;=lie){               //记录列数\n                cout&lt;&lt;\"  \";\n            }else{\n                if(i&lt;10){\n                    cout&lt;&lt;\"0\"&lt;&lt;i;\n                    i++;\n                }else{\n                    cout&lt;&lt;i;\n                    i++;\n                }\n                if(lie==input){\n                    cout&lt;&lt;\"\\n\";\n                }\n            }\n        }\n        o++;                          //数值区域+1\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5727 【深基 5. 例 3】冰雹猜想","url":"/posts/P5727-Hail-Guess/","content":"卧槽！下雹子了！牛逼啊！\n\n/*------------------------------------/\n    P5727 【深基5.例3】冰雹猜想\n/------------------------------------*/\n//https://www.luogu.com.cn/problem/P5727\n\n//给出一个正整数 n (n &lt;= 100)，然后对这个数字一直进行下面的操作：\n//如果这个数字是奇数，那么将其乘 3 再加 1，否则除以 2。经过若干次循环后，最终都会回到 1。\n//经过验证很大的数字（7×10^11）都可以按照这样的方式比变成 1，所以被称为“冰雹猜想”。\n//例如当 n 是 20，变化的过程是 [20, 10, 5, 16, 8, 4, 2, 1]。\n//根据给定的数字，验证这个猜想，并从最后的 1 开始，倒序输出整个变化序列。\n\n//https://www.luogu.com.cn/record/34483044\n//https://www.luogu.com.cn/record/52425424\n\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n,h=0;\n    cin&gt;&gt;n;\n    int a[10000];\n    a[0]=n;\n    for(h=1;n!=1;h++){\n        if(n%2==0){\n            n/=2;\n        }else if(n%2==1){\n            n*=3;\n            n++;\n        }\n        a[h]=n;\n    }\n    for(int l=h-1;l&gt;=0;l--){\n        cout&lt;&lt;a[l]&lt;&lt;\" \";\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5728 【深基 5. 例 5】旗鼓相当的对手","url":"/posts/P5728-A-Rivalry-Of-Equals/","content":"\n/*---------------------------------------------\n        P5728 【深基5.例5】旗鼓相当的对手       \n---------------------------------------------*/\n//https://www.luogu.com.cn/problem/P5728\n\n/*\n  现有 N(N&lt;=1000) 名同学参加了期末考试，并且获得了每名同学的信息：\n  语文、数学、英语成绩（均为不超过 150 的自然数）。\n  如果某对学生 &lt;i,j&gt; 的每一科成绩的分差都不大于 5，且总分分差不大于 10，那么这对学生就是“旗鼓相当的对手”。\n  现在想知道这些同学中，有几对“旗鼓相当的对手”？同样一个人可能会和其他好几名同学结对。\n*/\n\n//https://www.luogu.com.cn/record/34785861\n//https://www.luogu.com.cn/record/53184594\n//https://www.luogu.com.cn/record/53571412\n\n#include&lt;iostream&gt;\n#include&lt;cmath&gt;\nusing namespace std;\nint main(){\n    int n,stu[1001][3],stuall[1001]={0},qgxd=0;\n    cin&gt;&gt;n;\n    for(int i=0;i&lt;n;i++){\n        for(int o=0;o&lt;=2;o++){\n            cin&gt;&gt;stu[i][o];\n            stuall[i]+=stu[i][o];\n        }\n    }\n    for(int i=0;i&lt;n-1;i++){\n        for(int o=i+1;o&lt;n;o++){\n            int qgflag=0;\n            for(int k=0;k&lt;=2;k++){\n                if(abs(stu[i][k]-stu[o][k])&lt;=5){\n                    qgflag++;\n                }\n            }\n            if(qgflag==3){\n                if(abs(stuall[i]-stuall[o])&lt;=10){\n                    qgxd++;\n                }\n            }\n        }\n    }\n    cout&lt;&lt;qgxd&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5729 【深基 5. 例 7】工艺品制作","url":"/posts/P5729-Sakuzyo-Beam/","content":"\n\n    \n \n//洛谷OJ P5729 【深基5.例7】工艺品制作\n//现有一个长宽高分别为 w,x,h(1 &lt;= w,x,h &lt;= 20) 组成的实心玻璃立方体，可以认为是由 1*1*1 的数个小方块组成的，\n//每个小方块都有一个坐标 ( i,j,k ) .现在需要进行 $q(q\\le 100)$ 次切割。每次切割给出 (x1,y1,z1),(x2,y2,z2) 这 6 个参数，\n//保证 x1 &lt;= x2，y1 &lt;= y2，z1 &lt;= z2；\n//每次切割时，使用激光工具切出一个立方体空洞，空洞的壁平行于立方体的面，空洞的对角点就是给出的切割参数的两个点。\n//换句话说，所有满足  x1 &lt;= i &lt;= x2，y1 &lt;= j &lt;= y2，z1 &lt;= k &lt;= z2 的小方块 (i,j,k) 的点都会被激光蒸发。\n//例如有一个  4*4*4 的大方块，其体积为 64；给出参数 (1,1,1),(2,2,2) 时，中间的 8 块小方块就会被蒸发，\n//剩下 56 个小方块。现在想知道经过所有切割操作后，剩下的工艺品还剩下多少格小方块的体积？\n//https://www.luogu.com.cn/record/39267185\n//----*SAKUZYO BEAM*----&gt;\n#include&lt;iostream&gt;\nusing namespace std;\nbool sq[30][30][30]={0};\nint main(){\n    int c,k,g;\n    int sakuzyotime;\n    cin&gt;&gt;c&gt;&gt;k&gt;&gt;g&gt;&gt;sakuzyotime;\n    while(sakuzyotime--){\n        int sakuzyox1,sakuzyox2,sakuzyoy1,sakuzyoy2,sakuzyoz1,sakuzyoz2; //削除次数,削除坐标\n        cin&gt;&gt;sakuzyox1&gt;&gt;sakuzyoy1&gt;&gt;sakuzyoz1&gt;&gt;sakuzyox2&gt;&gt;sakuzyoy2&gt;&gt;sakuzyoz2;\n        for(int x=sakuzyox1;x&lt;=sakuzyox2;x++){\n            for(int y=sakuzyoy1;y&lt;=sakuzyoy2;y++){\n                for(int z=sakuzyoz1;z&lt;=sakuzyoz2;z++){\n                    sq[x][y][z]=1;\n                }\n            }\n        }\n    }\n    int ans=0;\n    for(int x=1;x&lt;=c;x++){\n        for(int y=1;y&lt;=k;y++){\n            for(int z=1;z&lt;=g;z++){\n                if(sq[x][y][z]==0){\n                    ans++;\n                }\n            }\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\nI will kill.\nI will destroy the world.\nNo matter what you do, I don’t stop.\nI’m the only one who’s right.\nI will kill.\nI will destroy the world.\nNo matter what you do, I don’t stop.\nIt is what it is.\nIt is what it is.\nIt is not… It’s not my fault.\n----SAKUZYO BEAM----&gt;\n","tags":["Luogu"]},{"title":"洛谷笔记 - P5736 【深基 7. 例 2】质数筛","url":"/posts/P5736-Prime-Number-Filter/","content":"\n/*-----------------------------------------/\n         P5736 【深基7.例2】质数筛\n  输入 n(n&lt;=100) 个不大于 100000 的整数。\n  要求全部储存在数组中，去除掉不是质数的数字，\n           依次输出剩余的质数。\n/----------------------------------------*/\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int n,num[101];\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;num[i];\n    }\n    for(int i=1;i&lt;=n;i++){\n        int z=0;\n        for(int o=2;o&lt;=num[i];o++){\n            if(num[i]%o==0){\n                z++;\n            }\n        }\n        if(z==1){\n            cout&lt;&lt;num[i]&lt;&lt;\" \";\n        }\n    }\n    cout&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5738 【深基 7. 例 4】歌唱比赛","url":"/posts/P5738-Singing-Match/","content":"希望我过段时间还能看懂（\n\n//P5738 【深基7.例4】歌唱比赛\n//n(n≤100) 名同学参加歌唱比赛，并接受 m (m&lt;=20) 名评委的评分，评分范围是 0 到 10 分。\n//这名同学的得分就是这些评委给分中去掉一个最高分，去掉一个最低分，剩下 m-2 个评分的平均数。\n//请问得分最高的同学分数是多少？评分保留 2 位小数。\n#include&lt;iostream&gt;\n#include&lt;iomanip&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nint main(){\n    int n,m,highflag,lowflag,i,o;\n    float score[100][20],highest,totalscore=0.00,pingjun[20]={0.00}; \n    /*错误点：数组范围出错，人数100，评委20\n      https://www.luogu.com.cn/record/36294425*/\n    cin&gt;&gt;n&gt;&gt;m;\n    for(i=1;i&lt;=n;i++){\n        for(o=1;o&lt;=m;o++){\n            cin&gt;&gt;score[i][o];\n        }\n    }\n    for(i=1;i&lt;=n;i++){\n        highflag=1;\n        lowflag=1;\n        for(o=1;o&lt;=m;o++){\n            if(score[i][highflag]&lt;score[i][o]){\n                highflag=o;\n            }\n            if(score[i][lowflag]&gt;score[i][o]){\n                lowflag=o;\n            }\n        }\n        score[i][highflag]=0;\n        score[i][lowflag]=0;\n        for(o=1;o&lt;=m;o++){\n            totalscore+=score[i][o];\n        }\n        pingjun[i]=totalscore/(m-2);\n        totalscore=0;\n    }\n    highest=pingjun[1];\n    for(i=1;i&lt;=n;i++){\n        if(pingjun[i]&gt;highest){\n            highest=pingjun[i];\n        }\n    }\n    cout&lt;&lt;fixed&lt;&lt;setprecision(2)&lt;&lt;highest&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5735 【深基 7. 例 1】距离函数","url":"/posts/P5735-Distance-Function/","content":"\n#include&lt;iostream&gt;\n#include&lt;iomanip&gt; //setpricision\n#include&lt;cmath&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nint main(){\n    double dist,x1,x2,x3,y1,y2,y3;//一定要注意，坐标的数值类型也必须是double，否则最后一个点分分钟WA\n    cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;x3&gt;&gt;y3;\n    dist=sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))+sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3))+sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));\n    cout&lt;&lt;setprecision(2)&lt;&lt;fixed&lt;&lt;dist&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]},{"title":"Hello World","url":"/posts/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick Start\nCreate a new post\n$ hexo new \"My New Post\"\nMore info: Writing\nRun server\n$ hexo server\nMore info: Server\nGenerate static files\n$ hexo generate\nMore info: Generating\nDeploy to remote sites\n$ hexo deploy\nMore info: Deployment\n"},{"title":"洛谷笔记 - P5737 【深基 7. 例 3】闰年展示","url":"/posts/P5737-RunNian/","content":"\n//P5737 【深基7.例3】闰年展示\n//输入 x,y(1582&lt;=x&lt;y&lt;=3000)，输出 [x,y]区间中闰年个数，并在下一行输出所有闰年年份数字，使用空格隔开。\n#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int kaishi,jieshu,i,m=0; //m:计数器\n    cin&gt;&gt;kaishi&gt;&gt;jieshu;\n    for(i=kaishi;i&lt;=jieshu;i++){\n        if((i%4==0&amp;&amp;i%100!=0)||(i%400==0&amp;&amp;i%100==0)){ //闰年判断：可以被4整除但不能被100整除/可以同时被400和100整除\n            m++;\n        }\n    }\n    cout&lt;&lt;m&lt;&lt;endl;\n    for(i=kaishi;i&lt;=jieshu;i++){\n        if((i%4==0&amp;&amp;i%100!=0)||(i%400==0&amp;&amp;i%100==0)){\n            cout&lt;&lt;i&lt;&lt;\" \";\n        }\n    }\n    return 0;\n}","tags":["Luogu"]},{"title":"洛谷笔记 - P5739 【深基 7. 例 7】计算阶乘","url":"/posts/P5739-Russian-Taowa-without-for-while/","content":"当初提交的时候不幸遇到了\n洛谷日爆\n\nJudger internal error\n\nTraceback (most recent call last):\n  File \"/app/luogu-judger/source/executor/LrunExecutor.py\", line 43, in execute\n    cwd=work_dir, stdout=subprocess.DEVNULL)\n  File \"/usr/lib/python3.7/subprocess.py\", line 323, in call\n    with Popen(*popenargs, **kwargs) as p:\n  File \"/usr/lib/python3.7/subprocess.py\", line 775, in __init__\n    restore_signals, start_new_session)\n  File \"/usr/lib/python3.7/subprocess.py\", line 1453, in _execute_child\n    restore_signals, start_new_session, preexec_fn)\nBlockingIOError: [Errno 11] Resource temporarily unavailable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/app/luogu-judger/source/tasks/Judge.py\", line 153, in judge\n    execution_limits=limits)\n  File \"/app/luogu-judger/source/judger/Judger.py\", line 40, in judge\n    execution_limits=execution_limits)\n  File \"/app/luogu-judger/source/judger/ProgramRunner.py\", line 72, in execute\n    mirror_directories=work_dir)\n  File \"/app/luogu-judger/source/executor/LrunExecutor.py\", line 78, in execute\n    shell=True, stdin=None, stdout=None, stderr=None)\n  File \"/usr/lib/python3.7/subprocess.py\", line 323, in call\n    with Popen(*popenargs, **kwargs) as p:\n  File \"/usr/lib/python3.7/subprocess.py\", line 775, in __init__\n    restore_signals, start_new_session)\n  File \"/usr/lib/python3.7/subprocess.py\", line 1453, in _execute_child\n    restore_signals, start_new_session, preexec_fn)\nBlockingIOError: [Errno 11] Resource temporarily unavailable\n//洛谷OJ P5739 【深基7.例7】计算阶乘\n//不用for/while算阶乘\n/*---------------------\n  提交三次评测机炸两次\n---------------------*/\n#include&lt;iostream&gt;\nusing namespace std;\nint n;\nint ans=1;\nint times(int i){\n    if(i==n){\n        return ans;\n    }else{\n        ans*=i+1;\n        return times(i+1);\n    }\n}\nint main(){\n    cin&gt;&gt;n;\n    int o=times(1);\n    cout&lt;&lt;o&lt;&lt;endl;\n    return 0;\n}","tags":["Luogu"]}]